[{"content":"PLAKAR-VERSION(1) - General Commands Manual\nNAME # plakar version - Display the current version of Plakar\nSYNOPSIS # plakar version\nDESCRIPTION # The plakar version command displays the current version of the Plakar software.\nDIAGNOSTICS # The plakar version utility exits 0 on success, and \u0026gt;0 if an error occurs.\nSEE ALSO # plakar(1)\nPlakar - January 29, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/version/","section":"Documentation","summary":"Display the current version of Plakar","title":"version","type":"docs"},{"content":"PLAKAR-VERSION(1) - General Commands Manual\nNAME # plakar version - Display the current version of Plakar\nSYNOPSIS # plakar version\nDESCRIPTION # The plakar version command displays the current version of the Plakar software.\nDIAGNOSTICS # The plakar version utility exits 0 on success, and \u0026gt;0 if an error occurs.\nSEE ALSO # plakar(1)\nPlakar - January 29, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/version/","section":"Documentation","summary":"Display the current version of Plakar","title":"version","type":"docs"},{"content":"PLAKAR-UI(1) - General Commands Manual\nNAME # plakar ui - Serve the Plakar user interface over HTTP\nSYNOPSIS # plakar ui [-addr address] [-cors] [-no-auth] [-no-spawn]\nDESCRIPTION # The plakar ui command serves the Plakar webapp user interface. By default, this command spawns the a web browser to browse the interface.\nThe options are as follows:\n-addr address\nSpecify the address and port for the UI to listen on separated by a colon, (e.g. localhost:8080). If omitted, plakar ui listen on localhost on a random port.\n-cors\nSet the \u0026lsquo;Access-Control-Allow-Origin\u0026rsquo; HTTP headers to allow the UI to be accesses from any origin.\n-no-auth\nDisable the authentication token that otherwise is needed to consume the exposed HTTP APIs.\n-no-spawn\nDo not automatically spawn a web browser. The UI will launch, but the user must manually open it by navigating to the specified address.\nEXAMPLES # Using a custom address and disable automatic browser execution:\n$ plakar ui -addr localhost:9090 -no-spawn DIAGNOSTICS # The plakar ui utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nA general error occurred, such as an inability to launch the UI or bind to the specified address.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/ui/","section":"Documentation","summary":"Serve the Plakar user interface over HTTP","title":"ui","type":"docs"},{"content":"PLAKAR-UI(1) - General Commands Manual\nNAME # plakar ui - Serve the Plakar user interface over HTTP\nSYNOPSIS # plakar ui [-addr address] [-cors] [-no-auth] [-no-spawn]\nDESCRIPTION # The plakar ui command serves the Plakar webapp user interface. By default, this command spawns the a web browser to browse the interface.\nThe options are as follows:\n-addr address\nSpecify the address and port for the UI to listen on separated by a colon, (e.g. localhost:8080). If omitted, plakar ui listen on localhost on a random port.\n-cors\nSet the \u0026lsquo;Access-Control-Allow-Origin\u0026rsquo; HTTP headers to allow the UI to be accesses from any origin.\n-no-auth\nDisable the authentication token that otherwise is needed to consume the exposed HTTP APIs.\n-no-spawn\nDo not automatically spawn a web browser. The UI will launch, but the user must manually open it by navigating to the specified address.\nEXAMPLES # Using a custom address and disable automatic browser execution:\n$ plakar ui -addr localhost:9090 -no-spawn DIAGNOSTICS # The plakar ui utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nA general error occurred, such as an inability to launch the UI or bind to the specified address.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/ui/","section":"Documentation","summary":"Serve the Plakar user interface over HTTP","title":"ui","type":"docs"},{"content":"PLAKAR-SYNC(1) - General Commands Manual\nNAME # plakar sync - Synchronize snapshots between Plakar repositories\nSYNOPSIS # plakar sync [snapshotID] to | from | with repository\nDESCRIPTION # The plakar sync command syncronize snapshots between two Plakar repositories. If a specific snapshot ID is provided, only snapshots with matching IDs will be synchronized.\nThe arguments are as follows:\nto | from | with\nSpecifies the direction of synchronization:\nto\nSynchronize snapshots from the local repository to the specified peer repository.\nfrom\nSynchronize snapshots from the specified peer repository to the local repository.\nwith\nSynchronize snapshots in both directions, ensuring both repositories are fully synchronized.\nrepository\nPath to the peer repository to synchronize with.\nEXAMPLES # Bi-directional synchronization with peer repository:\n$ plakar sync with /path/to/peer/repo DIAGNOSTICS # The plakar sync utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nGeneral failure occurred, such as an invalid repository path, snapshot ID mismatch, or network error.\nSEE ALSO # plakar(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/sync/","section":"Documentation","summary":"Synchronize snapshots between Plakar repositories","title":"sync","type":"docs"},{"content":"PLAKAR-SYNC(1) - General Commands Manual\nNAME # plakar sync - Synchronize snapshots between Plakar repositories\nSYNOPSIS # plakar sync [snapshotID] to | from | with repository\nDESCRIPTION # The plakar sync command syncronize snapshots between two Plakar repositories. If a specific snapshot ID is provided, only snapshots with matching IDs will be synchronized.\nThe arguments are as follows:\nto | from | with\nSpecifies the direction of synchronization:\nto\nSynchronize snapshots from the local repository to the specified peer repository.\nfrom\nSynchronize snapshots from the specified peer repository to the local repository.\nwith\nSynchronize snapshots in both directions, ensuring both repositories are fully synchronized.\nrepository\nPath to the peer repository to synchronize with.\nEXAMPLES # Bi-directional synchronization with peer repository:\n$ plakar sync with /path/to/peer/repo DIAGNOSTICS # The plakar sync utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nGeneral failure occurred, such as an invalid repository path, snapshot ID mismatch, or network error.\nSEE ALSO # plakar(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/sync/","section":"Documentation","summary":"Synchronize snapshots between Plakar repositories","title":"sync","type":"docs"},{"content":"PLAKAR-STDIO(1) - General Commands Manual\nNAME # plakar stdio - Start Plakar server in stdio mode\nSYNOPSIS # plakar stdio [-no-delete]\nDESCRIPTION # The plakar stdio command starts the Plakar server in standard input/output (stdio) mode, allowing interaction with Plakar over stdio streams. This command can be used for environments where communication is expected to occur over pipes or other stdio-based mechanisms.\nThe options are as follows:\n-no-delete\nDisables delete operations. When specified, the server will reject any requests that attempt to delete data.\nDIAGNOSTICS # The plakar stdio utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred while starting the stdio server or due to an invalid configuration.\nSEE ALSO # plakar(1)\nPlakar - November 12, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/stdio/","section":"Documentation","summary":"Start Plakar server in stdio mode","title":"stdio","type":"docs"},{"content":"PLAKAR-STDIO(1) - General Commands Manual\nNAME # plakar stdio - Start Plakar server in stdio mode\nSYNOPSIS # plakar stdio [-no-delete]\nDESCRIPTION # The plakar stdio command starts the Plakar server in standard input/output (stdio) mode, allowing interaction with Plakar over stdio streams. This command can be used for environments where communication is expected to occur over pipes or other stdio-based mechanisms.\nThe options are as follows:\n-no-delete\nDisables delete operations. When specified, the server will reject any requests that attempt to delete data.\nDIAGNOSTICS # The plakar stdio utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred while starting the stdio server or due to an invalid configuration.\nSEE ALSO # plakar(1)\nPlakar - November 12, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/stdio/","section":"Documentation","summary":"Start Plakar server in stdio mode","title":"stdio","type":"docs"},{"content":"PLAKAR-SERVER(1) - General Commands Manual\nNAME # plakar server - Start a Plakar server instance\nSYNOPSIS # plakar server [-allow-delete] [-listen address]\nDESCRIPTION # The plakar server command starts a Plakar server instance at the provided address, allowing remote interaction with a Plakar repository over a network.\nThe options are as follows:\n-allow-delete\nEnable delete operations. By default, delete operations are disabled to prevent accidental data loss.\nlisten address\nThe hostname and port where to listen to, separated by a colon. The hostname is optional. If not given, the server defaults to listen on localhost at port 9876.\nDIAGNOSTICS # The plakar server utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an unsupported protocol or invalid configuration.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/server/","section":"Documentation","summary":"Start a Plakar server instance","title":"server","type":"docs"},{"content":"PLAKAR-SERVER(1) - General Commands Manual\nNAME # plakar server - Start a Plakar server instance\nSYNOPSIS # plakar server [-allow-delete] [-listen address]\nDESCRIPTION # The plakar server command starts a Plakar server instance at the provided address, allowing remote interaction with a Plakar repository over a network.\nThe options are as follows:\n-allow-delete\nEnable delete operations. By default, delete operations are disabled to prevent accidental data loss.\nlisten address\nThe hostname and port where to listen to, separated by a colon. The hostname is optional. If not given, the server defaults to listen on localhost at port 9876.\nDIAGNOSTICS # The plakar server utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an unsupported protocol or invalid configuration.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/server/","section":"Documentation","summary":"Start a Plakar server instance","title":"server","type":"docs"},{"content":"PLAKAR-RM(1) - General Commands Manual\nNAME # plakar rm - Remove snapshots from the Plakar repository\nSYNOPSIS # plakar rm [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [snapshotID \u0026hellip;]\nDESCRIPTION # The plakar rm command deletes snapshots from a Plakar repository. Snapshots can be filtered for deletion by age, by tag, or by specifying the snapshot IDs to remove. If no snapshotID are provided, either -older or -tag must be specified to filter the snapshots to delete.\nThe arguments are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\nEXAMPLES # Remove a specific snapshot by ID:\n$ plakar rm abc123 Remove snapshots older than 30 days:\n$ plakar rm -older 30d Remove snapshots with a specific tag:\n$ plakar rm -tag daily-backup Remove snapshots older than 1 year with a specific tag:\n$ plakar rm -older 1y -tag daily-backup DIAGNOSTICS # The plakar rm utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid date format or failure to delete a snapshot.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/rm/","section":"Documentation","summary":"Remove snapshots from the Plakar repository","title":"rm","type":"docs"},{"content":"PLAKAR-RM(1) - General Commands Manual\nNAME # plakar rm - Remove snapshots from the Plakar repository\nSYNOPSIS # plakar rm [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [snapshotID \u0026hellip;]\nDESCRIPTION # The plakar rm command deletes snapshots from a Plakar repository. Snapshots can be filtered for deletion by age, by tag, or by specifying the snapshot IDs to remove. If no snapshotID are provided, either -older or -tag must be specified to filter the snapshots to delete.\nThe arguments are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\nEXAMPLES # Remove a specific snapshot by ID:\n$ plakar rm abc123 Remove snapshots older than 30 days:\n$ plakar rm -older 30d Remove snapshots with a specific tag:\n$ plakar rm -tag daily-backup Remove snapshots older than 1 year with a specific tag:\n$ plakar rm -older 1y -tag daily-backup DIAGNOSTICS # The plakar rm utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid date format or failure to delete a snapshot.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/rm/","section":"Documentation","summary":"Remove snapshots from the Plakar repository","title":"rm","type":"docs"},{"content":"PLAKAR-RESTORE(1) - General Commands Manual\nNAME # plakar restore - Restore files from a Plakar snapshot\nSYNOPSIS # plakar restore [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-concurrency number] [-quiet] [-rebase] [-to directory] [snapshotID:path \u0026hellip;]\nDESCRIPTION # The plakar restore command is used to restore files and directories at path from a specified Plakar snapshot to the local file system. If path is omitted, then all the files in the specified snapshotID are restored. If no snapshotID is provided, the command attempts to restore the current working directory from the last matching snapshot.\nThe options are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-concurrency number\nSet the maximum number of parallel tasks for faster processing. Defaults to 8 * CPU count + 1.\n-to directory\nSpecify the base directory to which the files will be restored. If omitted, files are restored to the current working directory.\n-rebase\nStrip the original path from each restored file, placing files directly in the specified directory (or the current working directory if -to is omitted).\n-quiet\nSuppress output to standard input, only logging errors and warnings.\nEXAMPLES # Restore all files from a specific snapshot to the current directory:\n$ plakar restore abc123 Restore to a specific directory:\n$ plakar restore -to /mnt/ abc123 Restore with rebase option, placing files directly in the target directory:\n$ plakar restore -rebase -to /home/op abc123 DIAGNOSTICS # The plakar restore utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as a failure to locate the snapshot or a destination directory issue.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/restore/","section":"Documentation","summary":"Restore files from a Plakar snapshot","title":"restore","type":"docs"},{"content":"PLAKAR-RESTORE(1) - General Commands Manual\nNAME # plakar restore - Restore files from a Plakar snapshot\nSYNOPSIS # plakar restore [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-concurrency number] [-quiet] [-rebase] [-to directory] [snapshotID:path \u0026hellip;]\nDESCRIPTION # The plakar restore command is used to restore files and directories at path from a specified Plakar snapshot to the local file system. If path is omitted, then all the files in the specified snapshotID are restored. If no snapshotID is provided, the command attempts to restore the current working directory from the last matching snapshot.\nThe options are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-concurrency number\nSet the maximum number of parallel tasks for faster processing. Defaults to 8 * CPU count + 1.\n-to directory\nSpecify the base directory to which the files will be restored. If omitted, files are restored to the current working directory.\n-rebase\nStrip the original path from each restored file, placing files directly in the specified directory (or the current working directory if -to is omitted).\n-quiet\nSuppress output to standard input, only logging errors and warnings.\nEXAMPLES # Restore all files from a specific snapshot to the current directory:\n$ plakar restore abc123 Restore to a specific directory:\n$ plakar restore -to /mnt/ abc123 Restore with rebase option, placing files directly in the target directory:\n$ plakar restore -rebase -to /home/op abc123 DIAGNOSTICS # The plakar restore utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as a failure to locate the snapshot or a destination directory issue.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/restore/","section":"Documentation","summary":"Restore files from a Plakar snapshot","title":"restore","type":"docs"},{"content":"PLAKAR-MOUNT(1) - General Commands Manual\nNAME # plakar mount - Mount a Plakar snapshot as a read-only filesystem\nSYNOPSIS # plakar mount mountpoint\nDESCRIPTION # The plakar mount command mounts a Plakar repository snapshot as a read-only filesystem at the specified mountpoint. This allows users to access snapshot contents as if they were part of the local file system, providing easy browsing and retrieval of files without needing to explicitly restore them. This command requires a Linux or Darwin (macOS) environment.\nEXAMPLES # Mount a snapshot to the specified directory:\n$ plakar mount ~/mnt DIAGNOSTICS # The plakar mount utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an invalid mountpoint or failure during the mounting process.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/mount/","section":"Documentation","summary":"Mount a Plakar snapshot as a read","title":"mount","type":"docs"},{"content":"PLAKAR-MOUNT(1) - General Commands Manual\nNAME # plakar mount - Mount a Plakar snapshot as a read-only filesystem\nSYNOPSIS # plakar mount mountpoint\nDESCRIPTION # The plakar mount command mounts a Plakar repository snapshot as a read-only filesystem at the specified mountpoint. This allows users to access snapshot contents as if they were part of the local file system, providing easy browsing and retrieval of files without needing to explicitly restore them. This command requires a Linux or Darwin (macOS) environment.\nEXAMPLES # Mount a snapshot to the specified directory:\n$ plakar mount ~/mnt DIAGNOSTICS # The plakar mount utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an invalid mountpoint or failure during the mounting process.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/mount/","section":"Documentation","summary":"Mount a Plakar snapshot as a read","title":"mount","type":"docs"},{"content":"PLAKAR-LS(1) - General Commands Manual\nNAME # plakar ls - List snapshots and their contents in a Plakar repository\nSYNOPSIS # plakar ls [-uuid] [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-recursive] [snapshotID:path]\nDESCRIPTION # The plakar ls command lists snapshots stored in a Plakar repository, and optionally displays the contents of path in a specified snapshot.\nThe options are as follows:\n-name name\nOnly apply command to snapshots that match name.\n-category category\nOnly apply command to snapshots that match category.\n-environment environment\nOnly apply command to snapshots that match environment.\n-perimeter perimeter\nOnly apply command to snapshots that match perimeter.\n-job job\nOnly apply command to snapshots that match job.\n-tag tag\nFilter snapshots by the specified tag, listing only those that contain the given tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-uuid\nDisplay the full UUID for each snapshot instead of the shorter snapshot ID.\n-recursive\nList directory contents recursively when exploring snapshot contents.\nEXAMPLES # List all snapshots with their short IDs:\n$ plakar ls List all snapshots with UUIDs instead of short IDs:\n$ plakar ls -uuid List snapshots with a specific tag:\n$ plakar ls -tag daily-backup List contents of a specific snapshot:\n$ plakar ls abc123 Recursively list contents of a specific snapshot:\n$ plakar ls -recursive abc123:/etc DIAGNOSTICS # The plakar ls utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to retrieve snapshot information or invalid snapshot ID.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/ls/","section":"Documentation","summary":"List snapshots and their contents in a Plakar repository","title":"ls","type":"docs"},{"content":"PLAKAR-LS(1) - General Commands Manual\nNAME # plakar ls - List snapshots and their contents in a Plakar repository\nSYNOPSIS # plakar ls [-uuid] [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-recursive] [snapshotID:path]\nDESCRIPTION # The plakar ls command lists snapshots stored in a Plakar repository, and optionally displays the contents of path in a specified snapshot.\nThe options are as follows:\n-name name\nOnly apply command to snapshots that match name.\n-category category\nOnly apply command to snapshots that match category.\n-environment environment\nOnly apply command to snapshots that match environment.\n-perimeter perimeter\nOnly apply command to snapshots that match perimeter.\n-job job\nOnly apply command to snapshots that match job.\n-tag tag\nFilter snapshots by the specified tag, listing only those that contain the given tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-uuid\nDisplay the full UUID for each snapshot instead of the shorter snapshot ID.\n-recursive\nList directory contents recursively when exploring snapshot contents.\nEXAMPLES # List all snapshots with their short IDs:\n$ plakar ls List all snapshots with UUIDs instead of short IDs:\n$ plakar ls -uuid List snapshots with a specific tag:\n$ plakar ls -tag daily-backup List contents of a specific snapshot:\n$ plakar ls abc123 Recursively list contents of a specific snapshot:\n$ plakar ls -recursive abc123:/etc DIAGNOSTICS # The plakar ls utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to retrieve snapshot information or invalid snapshot ID.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/ls/","section":"Documentation","summary":"List snapshots and their contents in a Plakar repository","title":"ls","type":"docs"},{"content":"PLAKAR-LOCATE(1) - General Commands Manual\nNAME # plakar locate - Find filenames in a Plakar snapshot\nSYNOPSIS # plakar locate [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-snapshot snapshotID] patterns \u0026hellip;\nDESCRIPTION # The plakar locate command search all the snapshots to find file names matching any of the given patterns and prints the abbreviated snapshot ID and the full path of the matched files. Matching works according to the shell globbing rules.\nThe options are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-snapshot snapshotID\nLimit the search to the given snapshot.\nEXAMPLES # Search for files ending in \u0026ldquo;wd\u0026rdquo;:\n$ plakar locate '*wd' abc123:/etc/master.passwd abc123:/etc/passwd DIAGNOSTICS # The plakar locate utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid parameters, inability to create the repository, or configuration issues.\nSEE ALSO # plakar(1), plakar-backup(1)\nCAVEATS # The patterns may have to be quote to avoid the shell attempting to expand them.\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/locate/","section":"Documentation","summary":"Find filenames in a Plakar snapshot","title":"locate","type":"docs"},{"content":"PLAKAR-LOCATE(1) - General Commands Manual\nNAME # plakar locate - Find filenames in a Plakar snapshot\nSYNOPSIS # plakar locate [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-snapshot snapshotID] patterns \u0026hellip;\nDESCRIPTION # The plakar locate command search all the snapshots to find file names matching any of the given patterns and prints the abbreviated snapshot ID and the full path of the matched files. Matching works according to the shell globbing rules.\nThe options are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-snapshot snapshotID\nLimit the search to the given snapshot.\nEXAMPLES # Search for files ending in \u0026ldquo;wd\u0026rdquo;:\n$ plakar locate '*wd' abc123:/etc/master.passwd abc123:/etc/passwd DIAGNOSTICS # The plakar locate utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid parameters, inability to create the repository, or configuration issues.\nSEE ALSO # plakar(1), plakar-backup(1)\nCAVEATS # The patterns may have to be quote to avoid the shell attempting to expand them.\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/locate/","section":"Documentation","summary":"Find filenames in a Plakar snapshot","title":"locate","type":"docs"},{"content":"PLAKAR-INFO(1) - General Commands Manual\nNAME # plakar info - Display detailed information about a Plakar repository, snapshot and filesystem entries\nSYNOPSIS # plakar info [[[SNAPSHOT][:/path/to/file-or-directory]]]\nDESCRIPTION # The plakar info command provides detailed information about a Plakar repository, snapshots and filesystem entries. The type of information displayed depends on the specified argument. Without any arguents, display information about the repository.\nEXAMPLES # Show repository information:\n$ plakar info Show detailed information for a snapshot:\n$ plakar info abc123 Show detailed information for a file within a snapshot:\n$ plakar info abcd123:/etc/passwd DIAGNOSTICS # The plakar info utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an invalid snapshot or object ID, or a failure to retrieve the requested data.\nSEE ALSO # plakar(1), plakar-snapshot(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/info/","section":"Documentation","summary":"Display detailed information about a Plakar repository, snapshot and filesystem entries","title":"info","type":"docs"},{"content":"PLAKAR-INFO(1) - General Commands Manual\nNAME # plakar info - Display detailed information about a Plakar repository, snapshot and filesystem entries\nSYNOPSIS # plakar info [[[SNAPSHOT][:/path/to/file-or-directory]]]\nDESCRIPTION # The plakar info command provides detailed information about a Plakar repository, snapshots and filesystem entries. The type of information displayed depends on the specified argument. Without any arguents, display information about the repository.\nEXAMPLES # Show repository information:\n$ plakar info Show detailed information for a snapshot:\n$ plakar info abc123 Show detailed information for a file within a snapshot:\n$ plakar info abcd123:/etc/passwd DIAGNOSTICS # The plakar info utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an invalid snapshot or object ID, or a failure to retrieve the requested data.\nSEE ALSO # plakar(1), plakar-snapshot(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/info/","section":"Documentation","summary":"Display detailed information about a Plakar repository, snapshot and filesystem entries","title":"info","type":"docs"},{"content":"PLAKAR(ID) - ID (1)\nNAME # plakar id - manage identities for Plakar repositories\nSYNOPSIS # plakar id [-\u0026lt;option\u0026gt;] [subcommand] [arguments]\nDESCRIPTION # The plakar id command is used to manage identities in the Plakar system. Identities are associated with email addresses, passphrases, and cryptographic key pairs to enable secure operations in repositories.\nThis command provides subcommands to create new identities, retrieve information about an identity, and list all identities available in the keyring directory.\n-create\nCreates a new identity by prompting the user for an email address and passphrase. Generates a key pair for secure operations.\n-info\nRetrieves and displays information about a specific identity using its identifier.\n-list, -ls\nLists all available identities in the keyring directory, displaying their metadata.\nARGUMENTS # subcommand\nSpecifies the action to perform. Available subcommands are:\ncreate\nPrompts the user to create a new identity.\ninfo\nDisplays information about a specific identity. Requires an identity identifier as an argument.\nlist, ls\nLists all stored identities.\narguments\nAdditional arguments specific to the chosen subcommand. For example, the identifier of an identity for the info subcommand.\nEXAMPLES # To illustrate usage:\nCreate a new identity:\nplakar id create\nDisplay information about a specific identity:\nplakar id info \u0026lt;identity_id\u0026gt;\nList all identities:\nplakar id list\nDIAGNOSTICS # The plakar id utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nGeneral failure occurred. Detailed error messages are displayed when failures occur.\nSEE ALSO # plakar(1)\nmacOS 15.0 - November 27, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/id/","section":"Documentation","summary":"manage identities for Plakar repositories","title":"id","type":"docs"},{"content":"PLAKAR(ID) - ID (1)\nNAME # plakar id - manage identities for Plakar repositories\nSYNOPSIS # plakar id [-\u0026lt;option\u0026gt;] [subcommand] [arguments]\nDESCRIPTION # The plakar id command is used to manage identities in the Plakar system. Identities are associated with email addresses, passphrases, and cryptographic key pairs to enable secure operations in repositories.\nThis command provides subcommands to create new identities, retrieve information about an identity, and list all identities available in the keyring directory.\n-create\nCreates a new identity by prompting the user for an email address and passphrase. Generates a key pair for secure operations.\n-info\nRetrieves and displays information about a specific identity using its identifier.\n-list, -ls\nLists all available identities in the keyring directory, displaying their metadata.\nARGUMENTS # subcommand\nSpecifies the action to perform. Available subcommands are:\ncreate\nPrompts the user to create a new identity.\ninfo\nDisplays information about a specific identity. Requires an identity identifier as an argument.\nlist, ls\nLists all stored identities.\narguments\nAdditional arguments specific to the chosen subcommand. For example, the identifier of an identity for the info subcommand.\nEXAMPLES # To illustrate usage:\nCreate a new identity:\nplakar id create\nDisplay information about a specific identity:\nplakar id info \u0026lt;identity_id\u0026gt;\nList all identities:\nplakar id list\nDIAGNOSTICS # The plakar id utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nGeneral failure occurred. Detailed error messages are displayed when failures occur.\nSEE ALSO # plakar(1)\nmacOS 15.0 - November 27, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/id/","section":"Documentation","summary":"manage identities for Plakar repositories","title":"id","type":"docs"},{"content":"PLAKAR-FIND(1) - General Commands Manual\nNAME # plakar find - Search for files or directories in Plakar snapshots\nSYNOPSIS # plakar find pattern \u0026hellip;\nDESCRIPTION # The plakar find command searches for files or directories across all snapshots in a Plakar repository that match a given pattern. It supports searching by full pathname or filename within snapshots and lists the results chronologically by snapshot creation time.\npattern\nOne or more search patterns specifying filenames or pathnames to search for in the snapshots. Patterns can be a full pathname or simply a file or directory name.\nEXAMPLES # Find a file by full pathname:\nplakar find /path/to/file.txt Find all snapshots containing files or directories named \u0026ldquo;backup\u0026rdquo;:\nplakar find backup DIAGNOSTICS # The plakar find utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to load snapshots or an invalid pattern.\nSEE ALSO # plakar(1)\nmacOS 15.0 - November 12, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/find/","section":"Documentation","summary":"Search for files or directories in Plakar snapshots","title":"find","type":"docs"},{"content":"PLAKAR-FIND(1) - General Commands Manual\nNAME # plakar find - Search for files or directories in Plakar snapshots\nSYNOPSIS # plakar find pattern \u0026hellip;\nDESCRIPTION # The plakar find command searches for files or directories across all snapshots in a Plakar repository that match a given pattern. It supports searching by full pathname or filename within snapshots and lists the results chronologically by snapshot creation time.\npattern\nOne or more search patterns specifying filenames or pathnames to search for in the snapshots. Patterns can be a full pathname or simply a file or directory name.\nEXAMPLES # Find a file by full pathname:\nplakar find /path/to/file.txt Find all snapshots containing files or directories named \u0026ldquo;backup\u0026rdquo;:\nplakar find backup DIAGNOSTICS # The plakar find utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to load snapshots or an invalid pattern.\nSEE ALSO # plakar(1)\nmacOS 15.0 - November 12, 2024\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/find/","section":"Documentation","summary":"Search for files or directories in Plakar snapshots","title":"find","type":"docs"},{"content":"PLAKAR-EXEC(1) - General Commands Manual\nNAME # plakar exec - Execute a file from a Plakar snapshot\nSYNOPSIS # plakar exec snapshotID:filepath [command_args \u0026hellip;]\nDESCRIPTION # The plakar exec command extracts and executes a file at filepath from a Plakar snapshot passing the given arguments command_args to it.\nEXAMPLES # Execute a script from a snapshot with some arguments:\n$ plakar exec abc123:/home/op/korpus/driver.sh -r 100 DIAGNOSTICS # plakar exec preserves the exit code of the command but may also fail with exit code 1 without executing it, for e.g. if the file or the snapshot doesn\u0026rsquo;t exist.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/exec/","section":"Documentation","summary":"Execute a file from a Plakar snapshot","title":"exec","type":"docs"},{"content":"PLAKAR-EXEC(1) - General Commands Manual\nNAME # plakar exec - Execute a file from a Plakar snapshot\nSYNOPSIS # plakar exec snapshotID:filepath [command_args \u0026hellip;]\nDESCRIPTION # The plakar exec command extracts and executes a file at filepath from a Plakar snapshot passing the given arguments command_args to it.\nEXAMPLES # Execute a script from a snapshot with some arguments:\n$ plakar exec abc123:/home/op/korpus/driver.sh -r 100 DIAGNOSTICS # plakar exec preserves the exit code of the command but may also fail with exit code 1 without executing it, for e.g. if the file or the snapshot doesn\u0026rsquo;t exist.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/exec/","section":"Documentation","summary":"Execute a file from a Plakar snapshot","title":"exec","type":"docs"},{"content":"PLAKAR-DIGEST(1) - General Commands Manual\nNAME # plakar digest - Calculate digests for files in a Plakar snapshot\nSYNOPSIS # plakar digest [-fast] snapshotID:filepath [\u0026hellip;]\nDESCRIPTION # The plakar digest command calculates and displays digests for specified filepath in a the given snapshotID. Multiple snapshotID and filepath may be given. By default, the command computes the digest by reading the file contents.\nThe options are as follows:\n-fast\nReturn the pre-recorded digest for the file without re-computing it from the file contents. It\u0026rsquo;s faster, but it does not verify the integrity against the current contents.\nEXAMPLES # Calculate the digest of a file within a snapshot:\n$ plakar digest abc123:/etc/passwd Retrieve the pre-recorded digest for faster output:\n$ plakar digest -fast abc123:/etc/netstart DIAGNOSTICS # The plakar digest utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to retrieve a file digest or invalid snapshot ID.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/digest/","section":"Documentation","summary":"Calculate digests for files in a Plakar snapshot","title":"digest","type":"docs"},{"content":"PLAKAR-DIGEST(1) - General Commands Manual\nNAME # plakar digest - Calculate digests for files in a Plakar snapshot\nSYNOPSIS # plakar digest [-fast] snapshotID:filepath [\u0026hellip;]\nDESCRIPTION # The plakar digest command calculates and displays digests for specified filepath in a the given snapshotID. Multiple snapshotID and filepath may be given. By default, the command computes the digest by reading the file contents.\nThe options are as follows:\n-fast\nReturn the pre-recorded digest for the file without re-computing it from the file contents. It\u0026rsquo;s faster, but it does not verify the integrity against the current contents.\nEXAMPLES # Calculate the digest of a file within a snapshot:\n$ plakar digest abc123:/etc/passwd Retrieve the pre-recorded digest for faster output:\n$ plakar digest -fast abc123:/etc/netstart DIAGNOSTICS # The plakar digest utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to retrieve a file digest or invalid snapshot ID.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/digest/","section":"Documentation","summary":"Calculate digests for files in a Plakar snapshot","title":"digest","type":"docs"},{"content":"PLAKAR-DIFF(1) - General Commands Manual\nNAME # plakar diff - Show differences between files in Plakar snapshots\nSYNOPSIS # plakar diff [-highlight] snapshotID1[:path1] snapshotID2[:path2]\nDESCRIPTION # The plakar diff command compares two Plakar snapshots, optionally restricting to specific files within them. If only snapshot IDs are provided, it compares the root directories of each snapshot. If file paths are specified, the command compares the individual files. The diff output is shown in unified diff format, with an option to highlight differences.\nThe options are as follows:\n-highlight\nApply syntax highlighting to the diff output for readability.\nEXAMPLES # Compare root directories of two snapshots:\n$ plakar diff abc123 def456 Compare across snapshots with highlighting: /etc/passwd\n$ plakar diff -highlight abc123:/etc/passwd def456:/etc/passwd DIAGNOSTICS # The plakar diff utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid snapshot IDs, missing files, or an unsupported file type.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/diff/","section":"Documentation","summary":"Show differences between files in Plakar snapshots","title":"diff","type":"docs"},{"content":"PLAKAR-DIFF(1) - General Commands Manual\nNAME # plakar diff - Show differences between files in Plakar snapshots\nSYNOPSIS # plakar diff [-highlight] snapshotID1[:path1] snapshotID2[:path2]\nDESCRIPTION # The plakar diff command compares two Plakar snapshots, optionally restricting to specific files within them. If only snapshot IDs are provided, it compares the root directories of each snapshot. If file paths are specified, the command compares the individual files. The diff output is shown in unified diff format, with an option to highlight differences.\nThe options are as follows:\n-highlight\nApply syntax highlighting to the diff output for readability.\nEXAMPLES # Compare root directories of two snapshots:\n$ plakar diff abc123 def456 Compare across snapshots with highlighting: /etc/passwd\n$ plakar diff -highlight abc123:/etc/passwd def456:/etc/passwd DIAGNOSTICS # The plakar diff utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid snapshot IDs, missing files, or an unsupported file type.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/diff/","section":"Documentation","summary":"Show differences between files in Plakar snapshots","title":"diff","type":"docs"},{"content":"PLAKAR-DIAG(1) - General Commands Manual\nNAME # plakar diag - Display detailed information about Plakar internal structures\nSYNOPSIS # plakar diag [errors | object | packfile | snapshot | state | vfs]\nDESCRIPTION # The plakar diag command provides detailed information about various internal data structures. The type of information displayed depends on the specified argument. Without any arguents, display information about the repository.\nThe sub-commands are as follows:\nerrors snapshotID\nDisplay the list of errors in the given snapshot.\nobject objectID\nDisplay information about a specific object, including its mac, type, tags, and associated data chunks.\npackfile packfileID\nShow details of packfiles, including entries and macs, which store object data within the repository.\nsnapshot snapshotID\nShow detailed information about a specific snapshot, including its metadata, directory and file count, and size.\nstate\nList or describe the states in the repository.\nvfs snapshotID:path\nShow filesystem (VFS) details for a specific path within a snapshot, listing directory or file attributes, including permissions, ownership, and custom metadata.\nEXAMPLES # Show repository information:\n$ plakar diag Show detailed information for a snapshot:\n$ plakar diag snapshot abc123 List all states in the repository:\n$ plakar diag state Display a specific object within a snapshot:\n$ plakar diag object 1234567890abcdef Display filesystem details for a path within a snapshot:\n$ plakar diag vfs abc123:/etc/passwd DIAGNOSTICS # The plakar diag utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an invalid snapshot or object ID, or a failure to retrieve the requested data.\nSEE ALSO # plakar(1), plakar-snapshot(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/diag/","section":"Documentation","summary":"Display detailed information about Plakar internal structures","title":"diag","type":"docs"},{"content":"PLAKAR-DIAG(1) - General Commands Manual\nNAME # plakar diag - Display detailed information about Plakar internal structures\nSYNOPSIS # plakar diag [errors | object | packfile | snapshot | state | vfs]\nDESCRIPTION # The plakar diag command provides detailed information about various internal data structures. The type of information displayed depends on the specified argument. Without any arguents, display information about the repository.\nThe sub-commands are as follows:\nerrors snapshotID\nDisplay the list of errors in the given snapshot.\nobject objectID\nDisplay information about a specific object, including its mac, type, tags, and associated data chunks.\npackfile packfileID\nShow details of packfiles, including entries and macs, which store object data within the repository.\nsnapshot snapshotID\nShow detailed information about a specific snapshot, including its metadata, directory and file count, and size.\nstate\nList or describe the states in the repository.\nvfs snapshotID:path\nShow filesystem (VFS) details for a specific path within a snapshot, listing directory or file attributes, including permissions, ownership, and custom metadata.\nEXAMPLES # Show repository information:\n$ plakar diag Show detailed information for a snapshot:\n$ plakar diag snapshot abc123 List all states in the repository:\n$ plakar diag state Display a specific object within a snapshot:\n$ plakar diag object 1234567890abcdef Display filesystem details for a path within a snapshot:\n$ plakar diag vfs abc123:/etc/passwd DIAGNOSTICS # The plakar diag utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as an invalid snapshot or object ID, or a failure to retrieve the requested data.\nSEE ALSO # plakar(1), plakar-snapshot(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/diag/","section":"Documentation","summary":"Display detailed information about Plakar internal structures","title":"diag","type":"docs"},{"content":"PLAKAR-CREATE(1) - General Commands Manual\nNAME # plakar create - Create a new Plakar repository\nSYNOPSIS # plakar create [-no-encryption] [-no-compression]\nDESCRIPTION # The plakar create command creates a new Plakar repository at the specified path which defaults to ~/.plakar.\nThe options are as follows:\n-hashing algorithm\nProvide alternative hashing algorithm to replace the default. Supported algorithms are BLAKE3 and SHA256, default is BLAKE3.\n-no-encryption\nDisable transparent encryption for the repository. If specified, the repository will not use encryption.\n-no-compression\nDisable transparent compression for the repository. If specified, the repository will not use compression.\nENVIRONMENT # PLAKAR_PASSPHRASE\nRepository encryption password.\nDIAGNOSTICS # The plakar create utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid parameters, inability to create the repository, or configuration issues.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/create/","section":"Documentation","summary":"Create a new Plakar repository","title":"create","type":"docs"},{"content":"PLAKAR-CREATE(1) - General Commands Manual\nNAME # plakar create - Create a new Plakar repository\nSYNOPSIS # plakar create [-no-encryption] [-no-compression]\nDESCRIPTION # The plakar create command creates a new Plakar repository at the specified path which defaults to ~/.plakar.\nThe options are as follows:\n-hashing algorithm\nProvide alternative hashing algorithm to replace the default. Supported algorithms are BLAKE3 and SHA256, default is BLAKE3.\n-no-encryption\nDisable transparent encryption for the repository. If specified, the repository will not use encryption.\n-no-compression\nDisable transparent compression for the repository. If specified, the repository will not use compression.\nENVIRONMENT # PLAKAR_PASSPHRASE\nRepository encryption password.\nDIAGNOSTICS # The plakar create utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid parameters, inability to create the repository, or configuration issues.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/create/","section":"Documentation","summary":"Create a new Plakar repository","title":"create","type":"docs"},{"content":"PLAKAR-CONFIG(1) - General Commands Manual\nNAME # plakar config - Manages plakar configuration\nSYNOPSIS # plakar config [key[=value]]\nDESCRIPTION # The plakar config command manages configuration of the Plakar software.\nWithout arguments show all the configuration options currently set on the repository. With just key, show the value defined for that key. Otherwise, set key to value.\nkey is of the form \u0026lsquo;category.option\u0026rsquo;.\nDIAGNOSTICS # The plakar config utility exits 0 on success, and \u0026gt;0 if an error occurs.\nSEE ALSO # plakar(1)\nPlakar - February 17, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/config/","section":"Documentation","summary":"Manages plakar configuration","title":"config","type":"docs"},{"content":"PLAKAR-CONFIG(1) - General Commands Manual\nNAME # plakar config - Manages plakar configuration\nSYNOPSIS # plakar config [key[=value]]\nDESCRIPTION # The plakar config command manages configuration of the Plakar software.\nWithout arguments show all the configuration options currently set on the repository. With just key, show the value defined for that key. Otherwise, set key to value.\nkey is of the form \u0026lsquo;category.option\u0026rsquo;.\nDIAGNOSTICS # The plakar config utility exits 0 on success, and \u0026gt;0 if an error occurs.\nSEE ALSO # plakar(1)\nPlakar - February 17, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/config/","section":"Documentation","summary":"Manages plakar configuration","title":"config","type":"docs"},{"content":"PLAKAR-CLONE(1) - General Commands Manual\nNAME # plakar clone - Clone a Plakar repository to a new location\nSYNOPSIS # plakar clone to path\nDESCRIPTION # The plakar clone command creates a full clone of an existing Plakar repository, including all snapshots, packfiles, and repository states, and saves it at the specified path. The cloned repository is assigned a new unique ID to distinguish it from the source repository.\nEXAMPLES # Clone a repository to a new location:\nplakar clone to /path/to/new/repository DIAGNOSTICS # The plakar clone utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to access the source repository or to create the target repository.\nSEE ALSO # plakar(1), plakar-create(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/clone/","section":"Documentation","summary":"Clone a Plakar repository to a new location","title":"clone","type":"docs"},{"content":"PLAKAR-CLONE(1) - General Commands Manual\nNAME # plakar clone - Clone a Plakar repository to a new location\nSYNOPSIS # plakar clone to path\nDESCRIPTION # The plakar clone command creates a full clone of an existing Plakar repository, including all snapshots, packfiles, and repository states, and saves it at the specified path. The cloned repository is assigned a new unique ID to distinguish it from the source repository.\nEXAMPLES # Clone a repository to a new location:\nplakar clone to /path/to/new/repository DIAGNOSTICS # The plakar clone utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to access the source repository or to create the target repository.\nSEE ALSO # plakar(1), plakar-create(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/clone/","section":"Documentation","summary":"Clone a Plakar repository to a new location","title":"clone","type":"docs"},{"content":"PLAKAR-CLEANUP(1) - General Commands Manual\nNAME # plakar cleanup - Remove unused data from a Plakar repository\nSYNOPSIS # plakar cleanup\nDESCRIPTION # The plakar cleanup command removes unused blobs, objects, and chunks from a Plakar repository to reduce storage space. It identifies unreferenced data and reorganizes packfiles to ensure only active snapshots and their dependencies are retained. The cleanup process updates snapshot indexes to reflect these changes.\nDIAGNOSTICS # The plakar cleanup utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred during cleanup, such as failure to update indexes or remove data.\nSEE ALSO # plakar(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/cleanup/","section":"Documentation","summary":"Remove unused data from a Plakar repository","title":"cleanup","type":"docs"},{"content":"PLAKAR-CLEANUP(1) - General Commands Manual\nNAME # plakar cleanup - Remove unused data from a Plakar repository\nSYNOPSIS # plakar cleanup\nDESCRIPTION # The plakar cleanup command removes unused blobs, objects, and chunks from a Plakar repository to reduce storage space. It identifies unreferenced data and reorganizes packfiles to ensure only active snapshots and their dependencies are retained. The cleanup process updates snapshot indexes to reflect these changes.\nDIAGNOSTICS # The plakar cleanup utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred during cleanup, such as failure to update indexes or remove data.\nSEE ALSO # plakar(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/cleanup/","section":"Documentation","summary":"Remove unused data from a Plakar repository","title":"cleanup","type":"docs"},{"content":"PLAKAR(CHECK) - CHECK (1)\nNAME # plakar check - Check data integrity in a Plakar repository or snapshot\nSYNOPSIS # plakar check [-concurrency number] [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-fast] [-no-verify] [-quiet] [snapshotID:path \u0026hellip;]\nDESCRIPTION # The plakar check command verifies the integrity of data in a Plakar repository. It checks the given paths inside the snapshots for consistency and validates file macs to ensure no corruption has occurred, or all the data in the repository if no snapshotID is given.\nThe options are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-concurrency number\nSet the maximum number of parallel tasks for faster processing. Defaults to 8 * CPU count + 1.\n-fast\nEnable a faster check that skips mac verification. This option performs only structural validation without confirming data integrity.\n-no-verify\nDisable signature verification. This option allows to proceed with checking snapshot integrity regardless of an invalid snapshot signature.\n-quiet\nSuppress output to standard output, only logging errors and warnings.\nEXAMPLES # Perform a full integrity check on all snapshots:\n$ plakar check Perform a fast check on specific paths of two snapshot:\n$ plakar check -fast abc123:/etc/passwd def456:/var/www DIAGNOSTICS # The plakar check utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully with no integrity issues found.\n\u0026gt;0\nAn error occurred, such as corruption detected in a snapshot or failure to check data integrity.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/check/","section":"Documentation","summary":"Check data integrity in a Plakar repository or snapshot","title":"check","type":"docs"},{"content":"PLAKAR(CHECK) - CHECK (1)\nNAME # plakar check - Check data integrity in a Plakar repository or snapshot\nSYNOPSIS # plakar check [-concurrency number] [-name name] [-category category] [-environment environment] [-perimeter perimeter] [-job job] [-tag tag] [-latest] [-before date] [-since date] [-fast] [-no-verify] [-quiet] [snapshotID:path \u0026hellip;]\nDESCRIPTION # The plakar check command verifies the integrity of data in a Plakar repository. It checks the given paths inside the snapshots for consistency and validates file macs to ensure no corruption has occurred, or all the data in the repository if no snapshotID is given.\nThe options are as follows:\n-name string\nOnly apply command to snapshots that match name.\n-category string\nOnly apply command to snapshots that match category.\n-environment string\nOnly apply command to snapshots that match environment.\n-perimeter string\nOnly apply command to snapshots that match perimeter.\n-job string\nOnly apply command to snapshots that match job.\n-tag string\nOnly apply command to snapshots that match tag.\n-latest\nOnly apply command to latest snapshot matching filters.\n-before date\nOnly apply command to snapshots matching filters and older than the specified date. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-since date\nOnly apply command to snapshots matching filters and created since the specified date, included. Accepted formats include relative durations (e.g. 2d for two days, 1w for one week) or specific dates in various formats (e.g. 2006-01-02 15:04:05).\n-concurrency number\nSet the maximum number of parallel tasks for faster processing. Defaults to 8 * CPU count + 1.\n-fast\nEnable a faster check that skips mac verification. This option performs only structural validation without confirming data integrity.\n-no-verify\nDisable signature verification. This option allows to proceed with checking snapshot integrity regardless of an invalid snapshot signature.\n-quiet\nSuppress output to standard output, only logging errors and warnings.\nEXAMPLES # Perform a full integrity check on all snapshots:\n$ plakar check Perform a fast check on specific paths of two snapshot:\n$ plakar check -fast abc123:/etc/passwd def456:/var/www DIAGNOSTICS # The plakar check utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully with no integrity issues found.\n\u0026gt;0\nAn error occurred, such as corruption detected in a snapshot or failure to check data integrity.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/check/","section":"Documentation","summary":"Check data integrity in a Plakar repository or snapshot","title":"check","type":"docs"},{"content":"PLAKAR-CAT(1) - General Commands Manual\nNAME # plakar cat - Display the contents of a file from a Plakar snapshot\nSYNOPSIS # plakar cat [-no-decompress] [-highlight] snapshotID:filepath \u0026hellip;\nDESCRIPTION # The plakar cat command outputs the contents of filepath within Plakar snapshots to the standard output. It can decompress compressed files and optionally apply syntax highlighting based on the file type.\nThe options are as follows:\n-no-decompress\nDisplay the file content as-is, without attempting to decompress it, even if it is compressed.\n-highlight\nApply syntax highlighting to the output based on the file type.\nEXAMPLES # Display a file\u0026rsquo;s contents from a snapshot:\n$ plakar cat abc123:/etc/passwd Display a file with syntax highlighting:\n$ plakar cat -highlight abc123:/home/op/korpus/driver.sh DIAGNOSTICS # The plakar cat utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to retrieve a file or decompress content.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/cat/","section":"Documentation","summary":"Display the contents of a file from a Plakar snapshot","title":"cat","type":"docs"},{"content":"PLAKAR-CAT(1) - General Commands Manual\nNAME # plakar cat - Display the contents of a file from a Plakar snapshot\nSYNOPSIS # plakar cat [-no-decompress] [-highlight] snapshotID:filepath \u0026hellip;\nDESCRIPTION # The plakar cat command outputs the contents of filepath within Plakar snapshots to the standard output. It can decompress compressed files and optionally apply syntax highlighting based on the file type.\nThe options are as follows:\n-no-decompress\nDisplay the file content as-is, without attempting to decompress it, even if it is compressed.\n-highlight\nApply syntax highlighting to the output based on the file type.\nEXAMPLES # Display a file\u0026rsquo;s contents from a snapshot:\n$ plakar cat abc123:/etc/passwd Display a file with syntax highlighting:\n$ plakar cat -highlight abc123:/home/op/korpus/driver.sh DIAGNOSTICS # The plakar cat utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as failure to retrieve a file or decompress content.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/cat/","section":"Documentation","summary":"Display the contents of a file from a Plakar snapshot","title":"cat","type":"docs"},{"content":"PLAKAR-BACKUP(1) - General Commands Manual\nNAME # plakar backup - Create a new snapshot of a directory in a Plakar repository\nSYNOPSIS # plakar backup [-concurrency number] [-exclude pattern] [-excludes file] [-check] [-quiet] [-stdio] [-tag tag] [directory]\nDESCRIPTION # The plakar backup command creates a new snapshot of directory, or the current directory, in a Plakar repository. Snapshots can be filtered to exclude specific files or directories based on patterns provided through options.\nThe options are as follows:\n-concurrency number\nSet the maximum number of parallel tasks for faster processing. Defaults to 8 * CPU count + 1.\n-exclude pattern\nSpecify individual exclusion patterns to ignore files or directories in the backup. This option can be repeated.\n-excludes file\nSpecify a file containing exclusion patterns, one per line, to ignore files or directories in the backup.\n-check\nPerform a full check on the backup after success.\n-quiet\nSuppress output to standard input, only logging errors and warnings.\n-stdio\nOutput one line per file to standard output instead of the default interactive output.\n-tag tag\nSpecify a tag to assign to the snapshot for easier identification.\nEXAMPLES # Create a snapshot of the current directory with a tag:\n$ plakar backup -tag daily-backup Backup a specific directory with exclusion patterns from a file:\n$ plakar backup -excludes ~/my-excludes-file /var/www Backup a directory with specific file exclusions:\n$ plakar backup -exclude \u0026quot;*.tmp\u0026quot; -exclude \u0026quot;*.log\u0026quot; /var/www DIAGNOSTICS # The plakar backup utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully, snapshot created.\n\u0026gt;0\nAn error occurred, such as failure to access the repository or issues with exclusion patterns.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/backup/","section":"Documentation","summary":"Create a new snapshot of a directory in a Plakar repository","title":"backup","type":"docs"},{"content":"PLAKAR-BACKUP(1) - General Commands Manual\nNAME # plakar backup - Create a new snapshot of a directory in a Plakar repository\nSYNOPSIS # plakar backup [-concurrency number] [-exclude pattern] [-excludes file] [-check] [-quiet] [-stdio] [-tag tag] [directory]\nDESCRIPTION # The plakar backup command creates a new snapshot of directory, or the current directory, in a Plakar repository. Snapshots can be filtered to exclude specific files or directories based on patterns provided through options.\nThe options are as follows:\n-concurrency number\nSet the maximum number of parallel tasks for faster processing. Defaults to 8 * CPU count + 1.\n-exclude pattern\nSpecify individual exclusion patterns to ignore files or directories in the backup. This option can be repeated.\n-excludes file\nSpecify a file containing exclusion patterns, one per line, to ignore files or directories in the backup.\n-check\nPerform a full check on the backup after success.\n-quiet\nSuppress output to standard input, only logging errors and warnings.\n-stdio\nOutput one line per file to standard output instead of the default interactive output.\n-tag tag\nSpecify a tag to assign to the snapshot for easier identification.\nEXAMPLES # Create a snapshot of the current directory with a tag:\n$ plakar backup -tag daily-backup Backup a specific directory with exclusion patterns from a file:\n$ plakar backup -excludes ~/my-excludes-file /var/www Backup a directory with specific file exclusions:\n$ plakar backup -exclude \u0026quot;*.tmp\u0026quot; -exclude \u0026quot;*.log\u0026quot; /var/www DIAGNOSTICS # The plakar backup utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully, snapshot created.\n\u0026gt;0\nAn error occurred, such as failure to access the repository or issues with exclusion patterns.\nSEE ALSO # plakar(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/backup/","section":"Documentation","summary":"Create a new snapshot of a directory in a Plakar repository","title":"backup","type":"docs"},{"content":"PLAKAR-ARCHIVE(1) - General Commands Manual\nNAME # plakar archive - Create an archive from a Plakar snapshot\nSYNOPSIS # plakar archive [-format type] [-output archive] [-rebase] snapshotID:path\nDESCRIPTION # The plakar archive command creates an archive of the given type from the contents at path of a specified Plakar snapshot, or all the files if no path is given.\nThe options are as follows:\n-format type\nSpecify the archive format. Supported formats are:\ntar\nCreates a tar file.\ntarball\nCreates a compressed tar.gz file.\nzip\nCreates a zip archive.\n-output pathname\nSpecify the output path for the archive file. If omitted, the archive is created with a default name based on the current date and time.\n-rebase\nStrip the leading path from archived files, useful for creating \u0026ldquo;flat\u0026rdquo; archives without nested directories.\nEXAMPLES # Create a tarball of the entire snapshot:\n$ plakar archive -output backup.tar.gz -format tarball abc123 Create a zip archive of a specific directory within a snapshot:\n$ plakar archive -output dir.zip -format zip abc123:/var/www Archive with rebasing to remove directory structure:\n$ plakar archive -rebase -format tar abc123 DIAGNOSTICS # The plakar archive utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as unsupported format, missing files, or permission issues.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/archive/","section":"Documentation","summary":"Create an archive from a Plakar snapshot","title":"archive","type":"docs"},{"content":"PLAKAR-ARCHIVE(1) - General Commands Manual\nNAME # plakar archive - Create an archive from a Plakar snapshot\nSYNOPSIS # plakar archive [-format type] [-output archive] [-rebase] snapshotID:path\nDESCRIPTION # The plakar archive command creates an archive of the given type from the contents at path of a specified Plakar snapshot, or all the files if no path is given.\nThe options are as follows:\n-format type\nSpecify the archive format. Supported formats are:\ntar\nCreates a tar file.\ntarball\nCreates a compressed tar.gz file.\nzip\nCreates a zip archive.\n-output pathname\nSpecify the output path for the archive file. If omitted, the archive is created with a default name based on the current date and time.\n-rebase\nStrip the leading path from archived files, useful for creating \u0026ldquo;flat\u0026rdquo; archives without nested directories.\nEXAMPLES # Create a tarball of the entire snapshot:\n$ plakar archive -output backup.tar.gz -format tarball abc123 Create a zip archive of a specific directory within a snapshot:\n$ plakar archive -output dir.zip -format zip abc123:/var/www Archive with rebasing to remove directory structure:\n$ plakar archive -rebase -format tar abc123 DIAGNOSTICS # The plakar archive utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as unsupported format, missing files, or permission issues.\nSEE ALSO # plakar(1), plakar-backup(1)\nPlakar - February 3, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/archive/","section":"Documentation","summary":"Create an archive from a Plakar snapshot","title":"archive","type":"docs"},{"content":"PLAKAR-AGENT(1) - General Commands Manual\nNAME # plakar agent - Run the Plakar agent\nSYNOPSIS # plakar agent [-prometheus address]\nDESCRIPTION # The plakar agent command starts the Plakar agent which will execute subsequent plakar commands on their behalfs for faster processing. plakar agent continues running indefinitely.\nThe options are as follows:\n-prometheus address\nExpose a prometheus server at address. Metrics are available at the /metrics endpoint.\nDIAGNOSTICS # The plakar agent utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid parameters, inability to create the repository, or configuration issues.\nSEE ALSO # plakar(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/agent/","section":"Documentation","summary":"Run the Plakar agent","title":"agent","type":"docs"},{"content":"PLAKAR-AGENT(1) - General Commands Manual\nNAME # plakar agent - Run the Plakar agent\nSYNOPSIS # plakar agent [-prometheus address]\nDESCRIPTION # The plakar agent command starts the Plakar agent which will execute subsequent plakar commands on their behalfs for faster processing. plakar agent continues running indefinitely.\nThe options are as follows:\n-prometheus address\nExpose a prometheus server at address. Metrics are available at the /metrics endpoint.\nDIAGNOSTICS # The plakar agent utility exits 0 on success, and \u0026gt;0 if an error occurs.\n0\nCommand completed successfully.\n\u0026gt;0\nAn error occurred, such as invalid parameters, inability to create the repository, or configuration issues.\nSEE ALSO # plakar(1)\nPlakar - February 1, 2025\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/agent/","section":"Documentation","summary":"Run the Plakar agent","title":"agent","type":"docs"},{"content":"","date":"19 February 2025","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"19 February 2025","externalUrl":null,"permalink":"/tags/backups/","section":"Tags","summary":"","title":"Backups","type":"tags"},{"content":"","date":"19 February 2025","externalUrl":null,"permalink":"/authors/gilles-chehade/","section":"Authors","summary":"","title":"Gilles Chehade","type":"authors"},{"content":"","date":"19 February 2025","externalUrl":null,"permalink":"/tags/plakar/","section":"Tags","summary":"","title":"Plakar","type":"tags"},{"content":"This article will guide you through the creation of your first backup with plakar.\nInstalling plakar # The first step is to install the software.\nAt the time of this writing, we do not yet provide packages and plakar has to be installed manually:\n$ go install https://github.com/PlakarKorp/plakar@latest This will ensure that dependencies are installed and you should be able to verify the command is properly installed:\n$ plakar version v0.4.27-alpha $ Running the local agent # To work efficiently, plakar requires each user to run a local agent that will provide caching among other things. If the agent is not running, the plakar CLI will operate in degraded mode as a safety net, but will disallow concurrent commands and won\u0026rsquo;t benefit from caching.\n$ plakar agent agent started with pid=12539 $ The agent can be stopped with the following command:\n$ plakar agent -stop $ Creating your first local repository # The plakar software reads your data, splits it into smaller chunks that it deduplicates and stores in a repository, a fancy word to designate storage space dedicated to hold these chunks.\nA repository can be a directory on your local filesystem, a mountpoint to your NAS, a remote directory over SFTP, a bucket on an S3 object store, or any storage we provide (or you write) a connector for.\nOur first repository will be a directory at /var/backups:\n$ plakar at /var/backups create repository passphrase: repository passphrase (confirm): $ Be extra careful when chosing the passphrase: it is the secret protecting your data. People with both access to the repository and knowledge of the passphrase can read your backups.\nDO NOT LOSE OR FORGET THE PASSPHRASE: it is not stored anywhere and can\u0026rsquo;t be recovered in case of loss. A lost passphrase means the data within the repository can no longer be recovered.\nIt is also possible to create unencrypted repositories, should your backups remain local, in which case the -no-encryption option has to be passed at creation:\n$ plakar at /var/backups create -no-encryption $ Note that once a repository is created, it is no longer possible to change its configuration, such changes require creating a new repository and performing a synchronization between old and new repository.\nCreating your first local backup # Once the repository is created, we can do the first backup to it:\n$ plakar at /var/backups backup /private/etc 9abc3294: OK ✓ /private/etc/ftpusers 9abc3294: OK ✓ /private/etc/asl/com.apple.iokit.power 9abc3294: OK ✓ /private/etc/pam.d/screensaver_new_ctk [...] 9abc3294: OK ✓ /private/etc/apache2 9abc3294: OK ✓ /private/etc 9abc3294: OK ✓ /private 9abc3294: OK ✓ / backup: created unsigned snapshot 9abc3294 of size 3.1 MB in 72.55875ms $ You can verify that it is properly recorded:\n$ plakar at /var/backups ls 2025-02-19T21:38:16Z 9abc3294 3.1 MB 0s /private/etc $ Verify the integrity of its content:\n$ plakar at /var/backups check 9abc3294 9abc3294: ✓ /private/etc/afpovertcp.cfg 9abc3294: ✓ /private/etc/apache2/extra/httpd-autoindex.conf 9abc3294: ✓ /private/etc/apache2/extra/httpd-dav.conf [...] 9abc3294: ✓ /private/etc/xtab 9abc3294: ✓ /private/etc/zshrc 9abc3294: ✓ /private/etc/zshrc_Apple_Terminal 9abc3294: ✓ /private/etc check: verification of 9abc3294:/private/etc completed successfully $ And restore it to a local directory:\n$ plakar at /var/backups restore -to /tmp/restore 9abc3294 9abc3294: OK ✓ /private/etc/afpovertcp.cfg 9abc3294: OK ✓ /private/etc/apache2/extra/httpd-autoindex.conf 9abc3294: OK ✓ /private/etc/apache2/extra/httpd-dav.conf [...] 9abc3294: OK ✓ /private/etc/xtab 9abc3294: OK ✓ /private/etc/zprofile 9abc3294: OK ✓ /private/etc/zshrc 9abc3294: OK ✓ /private/etc/zshrc_Apple_Terminal restore: restoration of 9abc3294:/private/etc at /tmp/restore completed successfully $ ls -l /tmp/restore total 1784 -rw-r--r--@ 1 gilles wheel 515 Feb 19 22:47 afpovertcp.cfg drwxr-xr-x@ 9 gilles wheel 288 Feb 19 22:47 apache2 drwxr-xr-x@ 16 gilles wheel 512 Feb 19 22:47 asl [...] -rw-r--r--@ 1 gilles wheel 0 Feb 19 22:47 xtab -r--r--r--@ 1 gilles wheel 255 Feb 19 22:47 zprofile -r--r--r--@ 1 gilles wheel 3094 Feb 19 22:47 zshrc -rw-r--r--@ 1 gilles wheel 9335 Feb 19 22:47 zshrc_Apple_Terminal $ Digression: one copy is not enough # You\u0026rsquo;ve completed a backup, which is great. However, if you\u0026rsquo;ll allow me, I\u0026rsquo;d like to digress for a moment:\nLiterature and empirical studies suggest that the annual probability of data loss at a single site—especially when considering factors like hardware failures, human error, and environmental risks—is typically in the low single-digit percentages. For example, a seminal study by Pinheiro, Weber, and Barroso (2007) titled \u0026ldquo;Failure Trends in a Large Disk Drive Population\u0026rdquo; found that hard drive failure rates generally fall in the range of 2% to 4% per year. In practice, when additional risks beyond basic hardware failure (such as accidental deletion or other operational issues) are factored in, many practitioners adopt a conservative estimate of around 5% per year for a single site.\nA local backup, as we just did, is helpful in case of accidental removal of the original data\u0026hellip; but not so much if the storage is entirely lost.\nAssuming that the annual probability of data loss at a single site is ( p = 0.05 ) (5%).\nFor a single set of data # The annual probability of loss is simply:\n$$p = 0.05$$ which corresponds to a 1 in 20 chance of losing the data.\nFor two copies at distinct sites # With two copies at distinct sites, data is only lost if both sites lose their copies simultaneously.\nIf we assume that each site\u0026rsquo;s failure occurs uniformly at random over 365 days. The daily failure probability for a single site is:\n$$\\frac{p}{365}$$ Thus, the probability that both copies fail on the same day is:\n$$\\left(\\frac{p}{365}\\right)^2$$ Since there are 365 days in a year, the annual probability of a simultaneous failure is approximately:\n$$365 \\times \\left(\\frac{p}{365}\\right)^2 = \\frac{p^2}{365}$$ For p=0.05, this becomes:\n$$\\frac{0.0025}{365} \\approx 6.85 \\times 10^{-6}$$ which corresponds to roughly a 1 in 145,000 chance of both copies failing on the same day over the course of a year.\nFor three copies at distinct sites # Similarly, the probability that all three copies fail on the same day is:\n$$\\left(\\frac{p}{365}\\right)^3$ Over the year, the probability becomes:\n$$365 \\times \\left(\\frac{p}{365}\\right)^3 = \\frac{p^3}{365^2}$$ For ( p = 0.05 ), this calculates to:\n$$\\frac{0.000125}{133225} \\approx 9.38 \\times 10^{-10}$$ or roughly a 1 in 1 billion chance.\nThese calculations show that while data loss at a single site is a very likely scenario, the odds reduce drastically with a second copy at a distinct site and become irrelevant with a third copy at a third site.\nIt is generally recommended to have the live data + 2 off-site copies to fall in the unlikely 1 in a billion chance range.\nCreating a second copy over SFTP # We now have a local repository with a copy of our backups, but it is done on the same machine, we\u0026rsquo;re currently at 5% chances of losing data this year if the drive dies !\nLet\u0026rsquo;s create another repository on my remote NAS over SFTP !\nSFTP is the Secure File Transfer Protocol that comes with OpenSSH.\nThis can be done by creating a new repository there, with its own passphrase:\n$ plakar at sftp://gilles@nas.plakar.io/var/backups create repository passphrase: repository passphrase (confirm): $ We could simply do a new backup to it, but this might produce different snapshots as data may have changed since the first backup.\nInstead, we can perform a repository synchronization. A repository synchronization ensures that backups are transfered from a repository to another, using the recorded data, and performing necessary decryption and encryption to produce a similar copy:\n$ plakar at /var/backups sync to sftp://gilles@nas.plakar.io/var/backups peer repository passphrase: peer repository passphrase (confirm): sync: synchronized 1 snapshot $ plakar at sftp://gilles@nas.plakar.io/var/backups ls 2025-02-19T21:38:16Z 9abc3294 3.1 MB 0s /private/etc $ We can verify integrity of the snapshot on the second repository:\n$ plakar at sftp://gilles@nas.plakar.io/var/backups check 9abc3294 9abc3294: ✓ /private/etc/afpovertcp.cfg 9abc3294: ✓ /private/etc/apache2/extra/httpd-autoindex.conf 9abc3294: ✓ /private/etc/apache2/extra/httpd-dav.conf [...] 9abc3294: ✓ /private/etc/xtab 9abc3294: ✓ /private/etc/zshrc 9abc3294: ✓ /private/etc/zshrc_Apple_Terminal 9abc3294: ✓ /private/etc check: verification of 9abc3294:/private/etc completed successfully $ The probability of losing data this year has now fallen from 5% to 0.00069% (1 in 145,000) !\nCreating a third copy over S3 # But what if both my drive died AND the data center hosting my NAS burst in flames ?\nLet’s create yet another repository on a remote S3 bucket !\n$ export S3_REPOSITORY_USER=gilles $ export S3_REPOSITORY_PASSWORD=******** $ plakar at s3://minio.plakar.io:9001/mybackups create repository passphrase: repository passphrase (confirm): $ Let\u0026rsquo;s do another synchronization !\n$ plakar at /var/backups sync to s3://minio.plakar.io:9001/mybackups peer repository passphrase: peer repository passphrase (confirm): sync: synchronized 1 snapshot $ plakar at s3://minio.plakar.io:9001/mybackups ls 2025-02-19T21:38:16Z 9abc3294 3.1 MB 0s /private/etc $ We can verify integrity of the snapshot on the third repository:\n$ plakar at s3://minio.plakar.io:9001/mybackups check 9abc3294 9abc3294: ✓ /private/etc/afpovertcp.cfg 9abc3294: ✓ /private/etc/apache2/extra/httpd-autoindex.conf 9abc3294: ✓ /private/etc/apache2/extra/httpd-dav.conf [...] 9abc3294: ✓ /private/etc/xtab 9abc3294: ✓ /private/etc/zshrc 9abc3294: ✓ /private/etc/zshrc_Apple_Terminal 9abc3294: ✓ /private/etc check: verification of 9abc3294:/private/etc completed successfully $ The probability of losing data has now fallen from 0.00069% to 0.0000001% (1 in a billion) !\nA few additional words on synchronization # Repository synchronization is slightly more advanced than what was shown, and you are encouraged to experiment with it to find the best worflow for your use-case.\nThis first command locates snapshots that exist in my local repository but not in the remote one, then sends them over:\n$ plakar at /var/backups sync to s3://minio.plakar.io:9001/mybackups This second command locates snapshots that exist in the remote repository but not in the local one to bring them over:\n$ plakar at /var/backups sync from s3://minio.plakar.io:9001/mybackups And this last command does it both ways, pushing to the remote repositories snapshots that exist locally and are missing, but also fetching locally snapshots that only exist remotely:\n$ plakar at /var/backups sync with s3://minio.plakar.io:9001/mybackups In addition, all these commands support passing snapshot identifiers and various options to perform partial synchronizations, only exchanging snapshots that match certain criterias. More information can be found in the documentation.\nAutomating backup and synchronization # TBD\nSetting up monitoring and alerting # TBD\n","date":"19 February 2025","externalUrl":null,"permalink":"/quickstart/","section":"Home","summary":"","title":"Quick start: setting up backups properly","type":"page"},{"content":"This page is here to show various screenshots of plakar in action !\nThe web user interface # Light mode Dark mode The CLI # ","date":"19 February 2025","externalUrl":null,"permalink":"/screenshots/","section":"Home","summary":"","title":"Screenshots","type":"page"},{"content":"","date":"19 February 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/v0.4.27-alpha/","section":"Documentation","summary":"commit f93b4b32e0ac719981d9235b361f88a0c67af374","title":"v0.4.27-alpha","type":"docs"},{"content":"","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/main/","section":"Documentation","summary":"commit f93b4b32e0ac719981d9235b361f88a0c67af374","title":"main","type":"docs"},{"content":"This page is the entry point to documentation for our software.\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/","section":"Documentation","summary":"","title":"Documentation","type":"docs"},{"content":"This is the documentation for the plakar utility.\n","date":"18 February 2025","externalUrl":null,"permalink":"/docs/plakar/","section":"Documentation","summary":"","title":"plakar","type":"docs"},{"content":"","date":"11 February 2025","externalUrl":null,"permalink":"/tags/back-to-basic/","section":"Tags","summary":"","title":"Back to Basic","type":"tags"},{"content":"","date":"11 February 2025","externalUrl":null,"permalink":"/tags/backup/","section":"Tags","summary":"","title":"Backup","type":"tags"},{"content":"","date":"11 February 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"11 February 2025","externalUrl":null,"permalink":"/authors/plakup/","section":"Authors","summary":"","title":"Plakup","type":"authors"},{"content":"In today\u0026rsquo;s digital world, data resilience is crucial. Our Insights section is dedicated to providing expert guidance on backup best practices, disaster recovery strategies, and emerging trends in data protection.\nWhether you\u0026rsquo;re looking to understand fundamental principles like the 3-2-1 backup rule, explore advanced backup solutions, or learn how to safeguard your data from cyber threats, you\u0026rsquo;ll find valuable insights here.\nStay informed with our in-depth analyses, best practice recommendations, and industry trends to help you build a robust and secure backup strategy.\n📌 Browse our latest articles below and take your backup strategy to the next level! 🚀\n","date":"11 February 2025","externalUrl":null,"permalink":"/insights/","section":"Ready to get some insights?","summary":"","title":"Ready to get some insights?","type":"insights"},{"content":"","date":"11 February 2025","externalUrl":null,"permalink":"/categories/technology/","section":"Categories","summary":"","title":"Technology","type":"categories"},{"content":"In today’s digital landscape, where downtime can cost businesses thousands of dollars per minute, having a robust disaster recovery (DR) strategy is non-negotiable. Two fundamental metrics in any business continuity plan are recovery time objective (RTO) and recovery point objective (RPO). These determine how quickly a system can recover after a failure and how much data a company is willing to lose in the process.\nA low RTO means your business aims for fast recovery, ensuring minimal service disruption, while a low RPO means you prioritize frequent backups to prevent significant data loss. Understanding these concepts is crucial for designing an effective backup strategy that aligns with your risk tolerance, budget, and operational needs.\nNote: Both RTO (and TSO, as it is sometimes referred) must be defined by the business considering business impact but taking also into account technical constraints, such as the ability to perform backups at any moment in production, as well as the capacity and cost associated with backup storage.\nWhat is Recovery Time Objective (RTO)? # Definition and Explanation # Recovery Time Objective (RTO) is the maximum acceptable amount of time that a system, application, or business process can be down after a failure before causing significant business disruption. For example, if a company sets an RTO of four hours, it means their systems must be back online within four hours of a disruption to minimize operational impact.\nFactors Affecting RTO # Business Impact Analysis (BIA): Identifying mission-critical applications and their required uptime. System Redundancy: High-availability infrastructure can minimize recovery time. Backup and Recovery Methods: Automated failover, manual recovery procedures, or real-time data replication. Disaster Recovery Testing: Frequent testing ensures realistic RTO expectations. Air Gap Quality: In extreme cases, the RTO depends on the quality of your air gap. For example, if the last magnetic tapes used for backup remain in the same data center during a fire, the RTO is significantly degraded. What is Recovery Point Objective (RPO)? # Definition and Explanation # Recovery Point Objective (RPO) defines the maximum acceptable data loss measured in time. It determines how frequently backups should be taken. For instance, an RPO of 15 minutes means that data backups occur every 15 minutes, ensuring minimal loss in the event of a failure.\nFactors Affecting RPO # Data Change Frequency: High-volume databases or rapidly changing data require a lower RPO. Backup Strategy: The method chosen, such as scheduled backups or continuous replication, has a direct impact on the RPO. Storage and Cost Constraints: Achieving a low RPO generally requires more frequent backups, increasing storage costs. Technical Capabilities: The production environment’s ability to perform backups at any given moment is a critical factor. Continuous Data Protection (CDP) # While Continuous Data Protection (CDP) is often touted for achieving near-zero RPO through real-time data replication, it is important to note that CDP does not replace traditional backups. In incidents where the replicated data itself becomes compromised, traditional backups are essential. However, CDP can contribute to an improved RTO by allowing quicker recovery of the most recent data state.\nKey Differences Between RTO and RPO # Feature Recovery Time Objective (RTO) Recovery Point Objective (RPO) Definition Maximum allowable downtime Maximum acceptable data loss Measured in Time (minutes, hours) Time (minutes, hours) Business Impact Determines system recovery speed Defines backup frequency Example A four-hour RTO means systems must be restored within four hours A 15-minute RPO means backups occur every 15 minutes Cost Factor Lower RTO generally requires higher infrastructure costs Lower RPO generally demands more frequent backups and greater storage costs Impact on Business Continuity Planning # Both RTO and RPO must be carefully aligned with a company’s risk assessment and financial constraints. Achieving shorter RTO and RPO targets requires:\nFaster Recovery Solutions: Such as hot standby systems or real-time replication, keeping in mind that these solutions must be supported by the production environment’s backup capacity. Frequent Data Backups: To reduce the window of potential data loss, balanced with the cost and storage implications. Attention to Air Gap Integrity: Ensuring that backups are stored securely, preferably isolated from the primary data center, to protect against disasters like fires or other site-specific incidents. Setting the Right RTO and RPO for Your Business # Analyzing Business Requirements # Identify Mission-Critical Applications: Determine which applications, databases, and customer portals are essential. Perform a Risk Assessment: Define acceptable levels of downtime and data loss, taking into account both business impact and technical capabilities. Consider Technical Constraints: The ability to perform backups at any moment and the costs involved in maintaining backup storage are key factors. Creating a Disaster Recovery Plan # Align Backup Frequency with RPO: Ensure that the backup schedule meets the desired RPO. Implement Automated Failover Strategies: To support a lower RTO, while being aware of the limitations of replication solutions. Ensure Robust Air Gap Practices: Avoid storing critical backup media, such as magnetic tapes, in the same data center where they might be exposed to the same risk, for example during a fire. Testing and Validating Your RTO and RPO Goals # Conduct Regular Disaster Recovery Drills: To verify that the systems can meet the defined RTO and RPO. Measure Recovery Time Performance: Compare actual recovery times against your predefined objectives. Adjust Backup Strategies as Needed: Based on test results and evolving technical capabilities or business requirements. Key Takeaways # RTO defines how quickly you recover; RPO defines how much data you lose. Shorter RTO and RPO targets require more advanced backup solutions and robust technical capabilities. The business must define RTO (and TSO) in conjunction with technical constraints, including the ability to perform immediate backups and the associated storage costs. Continuous Data Protection (CDP) supports improved RTO but does not replace traditional backups. The quality of your air gap is crucial; for example, if backup media remain in a compromised data center, your RTO can be severely impacted. Regular testing and validation are essential to ensure that recovery goals are achievable. Conclusion # Understanding RTO and RPO is essential for designing an effective business continuity plan. By carefully defining these objectives, businesses can minimize downtime, reduce data loss, and maintain customer trust. It is vital that organizations evaluate not only their risk tolerance and budget constraints but also the technical capabilities of their production environments, such as the ability to perform continuous backups and the costs of backup storage.\nInvesting in the right backup strategies and ensuring robust practices like maintaining an effective air gap are key to achieving your recovery objectives. Remember, while Continuous Data Protection (CDP) can enhance recovery times, it must be integrated with traditional backup solutions to ensure comprehensive protection against data loss and system downtime.\nA proactive disaster recovery plan is the cornerstone of long-term business stability and operational success.\n","date":"11 February 2025","externalUrl":null,"permalink":"/insights/understanding-rto-and-rpo-in-disaster-recovery/","section":"Ready to get some insights?","summary":"\u003cp\u003eIn today’s digital landscape, where \u003cstrong\u003edowntime can cost businesses thousands of dollars per minute\u003c/strong\u003e, having a robust \u003cstrong\u003edisaster recovery (DR) strategy\u003c/strong\u003e is non-negotiable. Two fundamental metrics in any \u003cstrong\u003ebusiness continuity plan\u003c/strong\u003e are \u003cstrong\u003erecovery time objective (RTO)\u003c/strong\u003e and \u003cstrong\u003erecovery point objective (RPO)\u003c/strong\u003e. These determine how quickly a system can recover after a failure and how much data a company is willing to lose in the process.\u003c/p\u003e","title":"Understanding RTO and RPO in disaster recovery","type":"insights"},{"content":"Let us get straight to the point: Amazon S3 is a phenomenal service for scalable, reliable object storage but it is not a backup solution. Sure, S3 boasts rock-solid durability and cost efficiency, but relying on it alone for backups is like trying to cover your bases with duct tape. In today’s world, where a single misclick can spell disaster, a thoughtful, multi-layered backup strategy is not just nice to have; it is absolutely essential.\nThis article digs into the reasons why S3’s native features do not suffice when it comes to safeguarding your data. We expose the design limitations of S3 for backup tasks, compare it with dedicated backup solutions, and highlight real-world scenarios that illustrate these challenges. Along the way, we share best practices, practical examples, and a few tongue-in-cheek observations about the perils of relying on S3 as your one-and-only data safeguard. If you are serious about data protection, prepare to rethink your backup strategy.\nUnderstanding S3: its strengths and its intended purpose # Amazon S3 was built to be a high-availability, scalable object storage service. It is designed to handle immense data loads for applications that demand immediate access. It is brilliant at what it does, but it was never designed to be the all-in-one solution for backups.\nWhat is Amazon S3? # At its core, S3 is an object storage system. You drop files into buckets and retrieve them whenever you need them. Its architecture is optimized for durability by distributing data across multiple physical sites. In other words, if a hard drive fails in one location, your data remains safe elsewhere. However, this setup is intended for live data access and distribution, not for managing the nuanced requirements of backups.\nS3’s features such as lifecycle policies, access control lists, and even versioning are powerful, yet they are not built for the kind of point-in-time recoveries or granular data management that a true backup solution demands. S3’s design prioritizes scale and accessibility over the precision and control that backups require. It is like using a fire hose to water your garden: effective for one purpose, but not ideal for another.\nWhy S3 is not meant to be a backup # The reality is that S3 was never designed with a backup mindset. When backing up data, you are not just storing files; you are preparing for worst-case scenarios such as accidental deletion, malicious actions, or even regional disasters. For example, S3’s eventual consistency model means that changes might not immediately reflect across all copies. In a backup scenario, that delay can turn a near-instant restore into a waiting game that could cost you dearly.\nMoreover, S3’s versioning, while useful for retrieving older copies, is not foolproof. If all versions are deleted at once, you are in trouble. Additionally, features like MFA delete make the process of removing unwanted files cumbersome, and Object Lock can restrict deletion permanently, which is not always desirable. S3 was built to store data reliably, not to manage the intricacies of a backup cycle.\nMany cloud services tout extreme durability, but it is important to remember that durability is not the same as recoverability. S3 excels at keeping your data safe from hardware failures, but it does not protect you from human error, configuration mistakes, or targeted attacks. This is why you need a backup strategy that addresses these challenges.\nThe real-world limitations of using S3 as a backup # Relying on S3 as your sole backup solution is a risky proposition. It is not that S3 loses data; rather, it is not built for the specific challenges of backup and recovery. Let us examine the practical limitations.\nData consistency and recovery challenges # Imagine you accidentally delete a critical file and expect S3’s versioning to rescue you. In theory, it might help, but S3 uses an eventual consistency model for certain operations. This means that immediately after a change, not all copies of your data may be updated. In a scenario where every second matters, this delay can lead to inconsistencies in the recovered data.\nConsider a situation where an application update inadvertently overwrites the latest version of a critical file. With S3, versioning might help, but only if you can roll back quickly and if the previous version is intact. More often than not, recovery becomes a tedious process. Recovery is not just about retrieving the latest copy of a file; it is about ensuring every piece of data is exactly where it should be, a task S3 is not optimized for.\nSecurity and compliance limitations # When protecting vital data, security is not optional; it is a mandate. Although S3 supports encryption and access control, setting these features up correctly can be challenging. A minor misconfiguration may leave your backup data exposed to malicious actors. Traditional backup solutions are designed with integrated security protocols that ensure data remains encrypted both in transit and at rest with minimal effort. S3, on the other hand, requires continuous attention to maintain proper security.\nCompliance is another concern. For industries with strict regulatory requirements, S3’s native security settings may not be sufficient. Standards such as HIPAA, GDPR, or PCI-DSS often require detailed audit trails, comprehensive access logs, and advanced encryption methods. Achieving these with S3 demands significant time and resource investment. While S3 may have impressive durability numbers, its security capabilities are limited when it comes to comprehensive backup needs.\nVersioning and deletion: a double-edged sword # S3 versioning is often viewed as a safety net for backups. In practice, however, it can work against you. Versioning allows you to retrieve older copies of your objects, but it also leaves you vulnerable if all versions are accidentally or maliciously deleted. MFA delete is intended to offer extra protection, but it can make even intentional deletions more complicated. Object Lock might seem like a solution for compliance, but it also means you can never completely remove the data if necessary.\nThe features that S3 provides to help with data recovery can sometimes hinder recovery efforts in a crisis. The backup world requires both durability and flexibility, along with rapid recovery capabilities. S3’s design falls short in this regard, often leaving you with a solution that works under ideal conditions but may fail when you need it most.\nComparing S3 with dedicated backup solutions # When it comes to data protection, you have two choices: force S3 into a role it was not designed for or use tools built specifically for backup. Here is a comparison of these options.\nTailored backup features versus S3\u0026rsquo;s generalist approach # Dedicated backup solutions are engineered for backup and recovery. They offer features such as incremental and differential backups, automated snapshotting, and rapid point-in-time restores. These systems are built with the assumption that mistakes will happen, whether due to human error or unforeseen issues, and they are designed to minimize downtime and data loss.\nS3, by contrast, is a general-purpose storage service. It reliably stores data but does not handle the nuances of backup cycles, retention policies, or quick recovery times. For instance, a dedicated backup system can restore a single file from a specific moment in time, while with S3, you may have to manually search through multiple versions. When disaster strikes, it is not as simple as instructing S3 to \u0026ldquo;roll back\u0026rdquo; and expect everything to be restored instantly.\nCost, complexity, and management overhead # At first glance, S3 may seem like a cheaper option due to its pay-as-you-go pricing. However, when you factor in the additional software, manual processes, and ongoing monitoring needed to make S3 work as a backup, the costs can quickly add up. Dedicated backup solutions come with integrated management interfaces, reporting tools, and automated recovery procedures that simplify operations and reduce the risk of human error.\nThe management overhead is not only a financial concern; it is also a matter of time and effort. Keeping track of encryption keys, version histories, and access policies in S3 can become a logistical challenge. In contrast, a dedicated backup system is designed to integrate seamlessly with your workflows, allowing you to focus on ensuring your data is restorable when you need it most.\nBest practices for a rock-solid backup strategy # No one is immune to mistakes. Fat-fingered deletions, configuration errors, and unforeseen mishaps are all part of managing data. That is why you need a backup strategy that is as layered as your overall security measures. Here are some best practices for building a robust backup system.\nEmbracing a multi-layered backup approach # Relying on a single backup method is a recipe for disaster. Instead, adopt a multi-layered strategy. S3 is excellent for storing massive amounts of data economically, but for critical data, you need multiple copies in different locations. Use local backups for rapid recovery, integrate cloud-native backup tools for continuous data protection, and consider offsite backups with other providers for additional security.\nSome organizations use S3 for archival purposes while relying on dedicated backup appliances or software for daily snapshots and rapid restores. This redundancy ensures that if one backup fails, another layer is ready to take over.\nLeveraging the right tools for the job # Not all backup tools are created equal. Choose systems that offer automated testing, granular recovery options, and seamless integration with your existing infrastructure. Whether you opt for a commercial backup solution or an open-source alternative, make sure it supports features like incremental backups, easy-to-use dashboards, and robust encryption. The goal is to create a system where every piece of data can be tracked, restored, and verified without having to perform complex maneuvers in a crisis.\nLessons from real-world case studies # Real-world experiences provide valuable lessons. Many organizations have discovered, often the hard way, that relying solely on S3 can lead to prolonged downtime and painful recovery processes. For example, one mid-sized firm experienced a major data loss due to accidental mass deletion. They mitigated the impact by integrating S3 with a dedicated backup solution, which not only reduced recovery times but also improved overall data governance. Regular testing of backup processes can reveal weaknesses before a real crisis hits and ensure that when mistakes occur, your data is safe and recoverable.\nQuick takeaways # S3 is excellent for scalable, high-availability object storage, but it is not a backup solution. S3\u0026rsquo;s eventual consistency and versioning can create significant recovery challenges. Security configurations in S3 require constant vigilance to protect sensitive backup data. Dedicated backup solutions offer granular recovery, automated testing, and true point-in-time restores. A multi-layered backup strategy that includes local, cloud, and offsite backups minimizes risk. Conclusion # In summary, while Amazon S3 is a robust platform for storing large amounts of data with impressive durability, it is not engineered to serve as a comprehensive backup solution. S3\u0026rsquo;s architecture emphasizes high availability and cost efficiency, not the nuanced demands of rapid recovery, granular version control, or robust security in backup scenarios. Relying solely on S3 for backup is similar to using a reliable delivery truck as an armored vault; it transports your data effectively but is not designed to handle every contingency.\nA thoughtful backup strategy requires multiple layers: local backups for speed, cloud backups for redundancy, and offsite solutions for additional security. Integrating dedicated backup tools alongside S3 can help prevent the issues of accidental deletions, malicious actions, and misconfigurations that could lead to catastrophic data loss. Investing in a comprehensive backup solution is essential because when it comes to protecting critical data, durability alone is not enough.\nFAQs # 1. Why is S3 not enough as a standalone backup solution?\nS3 is designed for high-availability object storage rather than the nuanced requirements of backups such as point-in-time recovery, incremental backups, or granular restoration. Its eventual consistency model may delay recovery, making it unsuitable for critical backup needs.\n2. Can S3\u0026rsquo;s versioning be used effectively for backups?\nWhile S3 versioning can help recover older copies of objects, it is not foolproof. Accidental or malicious deletion of all versions can leave you without a fallback, and features like MFA delete complicate the process further.\n3. How do dedicated backup solutions compare to using S3 alone?\nDedicated backup solutions offer automated snapshotting, incremental backups, and rapid recovery options specifically tailored for disaster scenarios. They also include robust encryption and management features that make data restoration simpler and more reliable.\n4. What is a multi-layered backup strategy?\nA multi-layered backup strategy combines various methods—local backups for fast recovery, cloud-based backups for redundancy, and offsite solutions for disaster resilience—to ensure that if one layer fails, other copies remain available.\n5. How can I integrate S3 with a dedicated backup solution?\nMany modern backup platforms provide seamless integration with S3. These solutions use S3 for cost-effective archival storage while managing real-time backups and rapid restores through specialized software. This hybrid approach leverages the strengths of S3 without exposing you to its limitations.\n","date":"10 February 2025","externalUrl":null,"permalink":"/insights/s3-is-not-a-backup---why-you-need-a-real-backup-strategy/","section":"Ready to get some insights?","summary":"\u003cp\u003eLet us get straight to the point: Amazon S3 is a phenomenal service for scalable, reliable object storage but it is not a backup solution. Sure, S3 boasts rock-solid durability and cost efficiency, but relying on it alone for backups is like trying to cover your bases with duct tape. In today’s world, where a single misclick can spell disaster, a thoughtful, multi-layered backup strategy is not just nice to have; it is absolutely essential.\u003c/p\u003e","title":"S3 is not a backup: why you need a real backup strategy","type":"insights"},{"content":"In the realm of data protection, backup and replication are two fundamental strategies employed to safeguard information. While they share the common goal of data preservation, they operate on distinct principles and serve different purposes. Understanding these differences is crucial for developing a robust data protection strategy.\nUnderstanding backup and replication # What is data backup? # Data backup involves creating copies of data at specific points in time that can be restored in the event of data loss or corruption. These backups are typically stored separately from the original data, often offsite or in the cloud, to protect against disasters. Backups can be full, incremental, or differential depending on the organization\u0026rsquo;s needs.\nWhat is data replication? # Data replication entails creating and maintaining duplicate copies of data across multiple locations or systems. This process ensures that data is continuously available and accessible even if one system fails. Replication can be synchronous, where data is copied in real time, or asynchronous, where data is copied at scheduled intervals.\nKey differences between backup and replication # Purpose and objectives # Backup: Provides restore points for recovering data after loss or corruption. Replication: Ensures continuous availability by maintaining real-time copies of data. Data consistency and recovery # Backup: Lets you restore data to a specific point in time, making it ideal for recovering from accidental deletions or corruption. Replication: Keeps copies consistent with the original but does not offer historical versions for recovery. Impact on performance # Backup: Typically scheduled during off-peak hours to minimize impact on performance. Replication: Continuously updates data, which can affect system performance, especially in high-volume environments. Use cases # Backup: Best for long-term data retention, compliance, and protection against accidental data loss. Replication: Ideal for mission-critical systems requiring high availability and rapid recovery. Complementary roles in data protection # While backup and replication serve different purposes, they are complementary components of a comprehensive data protection strategy. Combining both ensures that data is both readily available and protected against various threats.\nExample: iCloud and the difference between backup and replication # Consider the example of iCloud to illustrate the difference between replication and backup. iCloud replicates the photos on your phone to the cloud, but it does not create traditional backups of them.\nScenario 1: Accidental deletion by a child # Imagine you leave your phone unattended and your child begins to explore it. In their curiosity, they accidentally delete some important photos. Since iCloud replicates the photos in real time, these deletions are immediately reflected in your iCloud storage. In this case, the deletion is instantly replicated to iCloud, and because iCloud does not keep historical versions, the deleted photos are permanently lost. If you\u0026rsquo;re lucky, you might be able to find these photos in your trash, in the Recently Deleted section on iCloud. However, this option is only available for a limited time. If the deletion occurred several months ago, the photos may have already been permanently removed from your trash, making recovery very difficult or even impossible. In that case, if you don\u0026rsquo;t have a backup elsewhere, such as an external hard drive or another backup service, you may lose those precious memories for good.\nScenario 2: Data corruption from a third-party app # Suppose you download a third-party app to edit your photos. Although the app appears safe, it malfunctions or contains a bug that causes some of your photos to become corrupted. After syncing with iCloud, the corrupted photos are also replicated to the cloud. Replication synchronizes the corrupted data, and since iCloud does not allow you to restore previous versions of the photos, the damage is irreversible. With a backup strategy in place, you could easily restore the original, uncorrupted photos.\nScenario 3: Data loss after a breakup # Imagine a personal scenario where, after a breakup, your ex-partner who still has access to your iCloud account or your phone decides to delete all of your shared photos. Because iCloud replicates changes made on the phone, any deletions are immediately reflected on the cloud. iCloud does not provide a way to roll back the deletions, and the photos are permanently gone. However, if you had a separate backup, such as a hard drive backup or another cloud service, you could have recovered those precious memories even after this unexpected event.\nConclusion # In the world of data protection, backup remains an indispensable component. Even the most robust replication strategy cannot replace the need for backups. Replication keeps data available in real time but fails to protect against scenarios such as human error, corruption, or malicious actions. Such errors are simply mirrored across your replicated systems.\nThink of replication as a safety net that ensures continuous data access. Without backups, however, this net does not catch your mistakes. Backups serve as a safety vault that allows you to recover data to a specific point in time and prevents the irreversible loss of critical information. Relying solely on replication, without the safeguard of backups, leaves data vulnerable to irreparable damage whether due to accidental deletions, software bugs, or cyber threats.\nFor organizations and individuals alike, it is crucial to understand that replication cannot replace backups. A proper data protection strategy requires both to truly secure valuable information.\nQuick takeaways # Backup creates copies of data at specific points in time for recovery purposes. Replication maintains real-time copies of data across multiple locations for high availability. Backups are cost-effective and suitable for long-term data retention. Replication requires significant infrastructure investment and can impact system performance. Combining both strategies enhances data protection and recovery capabilities. FAQs # Can replication replace backups?\nNo, replication ensures data availability but does not provide historical recovery points like backups do.\nHow does replication affect system performance?\nContinuous data replication can consume system resources and may impact performance, especially in high-volume environments.\nIs replication more expensive than backup?\nYes, replication typically requires more infrastructure and storage, making it more costly than traditional backup solutions.\nCan replication be used for disaster recovery?\nYes, replication is a key component of disaster recovery plans, ensuring data availability in case of system failures.\nHow often should backups and replications be performed?\nBackups should be scheduled based on data change frequency and compliance requirements, while replication frequency depends on the criticality of the data and the organization\u0026rsquo;s recovery objectives.\n","date":"10 February 2025","externalUrl":null,"permalink":"/insights/why-replication-is-not-backup/","section":"Ready to get some insights?","summary":"\u003cp\u003eIn the realm of data protection, \u003cstrong\u003ebackup\u003c/strong\u003e and \u003cstrong\u003ereplication\u003c/strong\u003e are two fundamental strategies employed to safeguard information. While they share the common goal of data preservation, they operate on distinct principles and serve different purposes. Understanding these differences is crucial for developing a robust data protection strategy.\u003c/p\u003e","title":"Why replication is not backup","type":"insights"},{"content":"Data loss can happen in many ways: whether due to accidental deletion, cyberattacks, hardware failure, or even a catastrophic event like a data center fire. To protect against these risks, IT professionals have long relied on the 3-2-1 backup rule, a fundamental strategy for ensuring data resilience.\nThis article breaks down what the 3-2-1 backup rule is, why it is critical, and why replication or single-cloud backups are not enough. We also explore the types of threats it mitigates, from hacker intrusions to storage provider failures, and how to implement it effectively with proper offline or air-gapped backups.\nWhat is the 3-2-1 backup rule? # The 3-2-1 backup rule is a best-practice guideline for data redundancy and disaster recovery. It ensures that organizations maintain sufficient copies of their data to minimize the risk of total data loss.\nThe core principle of 3-2-1 # The rule dictates that you should:\nKeep at least 3 copies of your data (one primary plus two backups). Store backups on at least 2 different types of media (for example, a local disk and cloud storage, or a local NAS and tape). Ensure 1 backup copy is off-site (in a different location or cloud service, ideally offline or air-gapped). This approach guarantees that even if one or two copies are lost, a third copy remains accessible for recovery.\nExample of a proper 3-2-1 backup implementation # Let us say you run a critical business application storing important customer data:\nPrimary Copy – The data lives on your production server (for example, an on-premise storage system or S3 storage). Secondary Copy – A backup is stored on a separate NAS, another cloud storage, or a different disk-based system. Tertiary Copy (Off-Site and Air-Gapped) – A cloud backup stored in AWS Glacier with a multi-day deletion delay, or a tape backup stored in a secure facility with robotic retrieval. This ensures that even if your main server fails, your local backup is corrupted, or your cloud provider is compromised, an air-gapped copy remains protected.\nWhy is it important to implement the 3-2-1 backup rule? # A single backup is never enough because data loss comes from many unpredictable sources, including:\nHuman errors – Accidental file deletions or unintended data overwrites. Hardware failures – Disk crashes, server failures, or RAID corruption. Cyber threats – Ransomware, malware, or hacker intrusions. Administrative mistakes – Accidental database deletions or misconfigurations. Cloud service failures – Unexpected outages or accidental deletions by providers. Physical disasters – Fires, floods, earthquakes, or power failures. Rogue admins – Malicious insiders deleting backups or modifying retention policies. A multi-layered backup strategy like 3-2-1 ensures that even if one or two of these failures occur, you still have a recoverable copy of your data.\nWhy replication is not a backup # One common misconception is that replication can replace backup. This is not true. While replication is useful for availability, it does not protect against data corruption, accidental deletions, or cyberattacks.\nKey differences between backup and replication # Aspect Backup Replication Purpose Disaster recovery High availability Retention Keeps historical versions Only keeps the latest version Data corruption protection Older copies remain untouched Corruption is replicated immediately Protection from human error Can restore from a clean backup Deletes or mistakes are instantly mirrored Protection from ransomware Can recover from an old snapshot Ransomware spreads to replicated copies Why replication fails as a backup strategy # Imagine an admin accidentally deletes a critical database. If your system only uses replication:\nReplication immediately mirrors the deletion across all systems so that the data is lost everywhere. There is no historical backup to restore from, meaning you cannot go back in time. If ransomware encrypts files, the encrypted data is also replicated immediately. In contrast, a proper backup solution with versioning allows recovery from an earlier, uncorrupted state.\nRead more about this topic: Why replication is not backup?\nWhy a backup in the same cloud account is not enough # Cloud services like AWS, Google Cloud, and Azure offer native snapshots and backups. While these options seem convenient, relying solely on one cloud provider can be a serious mistake.\nThe risks of same-cloud backups # Hacker intrusions and ransomware If an attacker gains access to your cloud account, they can delete all snapshots and backups. Many cloud providers allow instant deletion of backups, making recovery difficult. Solution: Store off-site backups with multi-day deletion delays, such as AWS Glacier Vault Lock. Storage provider failures Storage provider-side failures can happen. For example, Amazon S3 experienced data loss incidents due to misconfigurations, and Google Cloud once accidentally deleted customer backups because of an internal process error. Solution: Store at least one copy on a separate cloud provider or on-premise tape storage. Account termination risks If your cloud provider suspends or terminates your account, you could lose access to both production and backup data stored in that same cloud. Solution: Store an additional copy in a different cloud provider or physical tape archive. Conclusion # The 3-2-1 backup rule remains a simple yet powerful strategy to protect against a wide range of data loss scenarios.\nReplication is not backup because it does not protect against accidental deletions, corruption, or ransomware. A single cloud backup is not enough since provider failures, rogue admins, or account terminations could lead to permanent data loss. Offline or air-gapped backups are critical. Tape storage or AWS Glacier with deletion locks ensures that backups cannot be easily deleted. By keeping multiple copies on different media, and one truly protected off-site, you ensure resilience against both human and technical failures. No matter the size of your organization, implementing a proper 3-2-1 backup strategy is essential to safeguard data against disaster.\nQuick takeaways # 3-2-1 backup rule fundamentals:\nMaintain at least three copies of your data on two different types of media, with one copy stored off-site or in an air-gapped environment. Backup vs. replication:\nReplication ensures high availability but mirrors errors and corruption immediately, making it insufficient as a standalone backup strategy. Comprehensive threat protection:\nA robust backup strategy defends against human error, hardware failures, cyberattacks (including ransomware), and physical disasters. Limitations of cloud-only backups:\nRelying solely on one cloud provider can expose your data to risks such as security breaches, misconfigurations, or account terminations. Importance of offline/air-gapped backups:\nOffline or air-gapped backups (for example, tape storage or AWS Glacier with deletion locks) are critical to prevent accidental or malicious data deletions. Ensuring data resilience:\nA multi-layered backup approach, as outlined by the 3-2-1 rule, guarantees that even if one or more copies are lost, your data remains recoverable. ","date":"10 February 2025","externalUrl":null,"permalink":"/insights/the-3-2-1-backup-rule---a-proven-strategy-for-data-protection/","section":"Ready to get some insights?","summary":"\u003cp\u003eData loss can happen in many ways: whether due to accidental deletion, cyberattacks, hardware failure, or even a catastrophic event like a \u003cstrong\u003edata center fire\u003c/strong\u003e. To protect against these risks, IT professionals have long relied on the \u003cstrong\u003e3-2-1 backup rule\u003c/strong\u003e, a fundamental strategy for ensuring data resilience.\u003c/p\u003e","title":"The 3-2-1 backup rule: A proven strategy for data protection","type":"insights"},{"content":"","date":"18 December 2024","externalUrl":null,"permalink":"/","section":"Home","summary":"","title":"Home","type":"page"},{"content":" Publisher # Plakar Simplified Joint-Stock Company (SAS) with a capital of 1,000 euros SIREN: 933 509 754 RCS Paris Head office: 149 avenue du Maine, 75014 Paris, France EU VAT number: FR XX 933509754 Host: KANDBAZ SAS, 1 rue de Stockholm, 75008 Paris, France\nContact Us # Mail: Plakar SAS, 149 avenue du Maine, 75014 Paris, France Technical Support: help@plakar.io\nAbuse # To report illegal content or if you are the victim of fraudulent use of our services, please contact us at: help@plakar.io\nIntellectual Property # This website and all its content (including data, information, photos, logos, and trademarks) are the exclusive property of Plakar SAS or its partners. Any reproduction, representation, translation, adaptation, or citation, whether partial or complete, regardless of the process or medium, is strictly prohibited except as provided by law or expressly authorized by their owner. Non-contractual photos.\nPersonal Data # You can visit our website without having to disclose your identity or provide personal information. However, we may request information from you to process an order, identify a technical support request, correspond with you, provide a subscription, or submit a job application.\n","date":"18 December 2024","externalUrl":null,"permalink":"/legal/","section":"Legal Notice","summary":"","title":"Legal Notice","type":"legal"},{"content":"Hello teams\n","date":"18 December 2024","externalUrl":null,"permalink":"/team/team/","section":"Teams","summary":"","title":"Team","type":"team"},{"content":"","date":"18 December 2024","externalUrl":null,"permalink":"/team/","section":"Teams","summary":"","title":"Teams","type":"team"},{"content":" Read about Plakar latest development update. ","date":"13 November 2024","externalUrl":null,"permalink":"/articles/","section":"Plakar articles","summary":"","title":"Plakar articles","type":"articles"},{"content":"Hello Plakar pals and curious coders! Plakup here, bringing you the freshest acorns of updates from the Plakar hackroom! We’ve had a whirlwind of activity, new faces joining the team, and some clever improvements from Gilles, Julien, and the whole gang. So grab a coffee (or a handful of sunflower seeds, if you’re like me), and let’s jump into the latest!\n1. Welcome Julien Castets! # First things first, let’s give a warm Plakar welcome to Julien \u0026ldquo;niluje\u0026rdquo; Castets, who joined us on November 11! 🎉 Julien has already jumped in with creative ideas and code contributions (not to mention his GitHub Action adventures). We’re thrilled to have him onboard and excited to see the magic he’ll bring to Plakar’s UI and more!\n2. File Testing and the Search for a Pathological Corpus 🗂️ # The team has been diving into file testing strategies, with discussions around a “corpus” to push Plakar’s boundaries. The idea? A hybrid set of test files that cover all sorts of types: from small files to hefty images, randomized data, and even edge cases like empty files, /dev/zero, and /dev/random files, and cyclic symlinks. By testing these edge cases, the team ensures that Plakar handles any file you throw its way! 🌞\n3. Fixing Permissions with Precision: chmod Restoration Updates 🔧 # One of Gilles’s top priorities this week was addressing a restore permissions issue. After a bit of restructuring, the restore now handles permissions more gracefully by making directory creation (with a secure 0700 mode) a standalone step. Once child files are processed, it finalizes permissions with SetPermissions, ensuring everything restores exactly as it should—hats off, Gilles!\n4. UI Revamp and Automation with GitHub Actions # Julien didn’t waste any time getting to work on enhancing Plakar’s UI workflow. He’s been wrestling with GitHub Actions, setting up a process to automate builds, updates, and even PR creation between plakar-ui and the main Plakar repository. After some experimentation (and a few “aha!” moments), Julien proposed a more streamlined approach: a manual workflow in Plakar that lets us specify branches for seamless UI updates with a single click. The ambition and energy Julien’s brought to Plakar’s UI are nothing short of inspiring! 🚀\nExperimental UI Structure # Julien also suggested consolidating some of the UI folders, like ui/v2, to simplify the setup. Although this change was closed to keep options open for future experiments, it shows the team’s forward-thinking approach as they plan for long-term UI flexibility.\n5. Smarter Snapshot Navigation # Julien also made a small but impactful fix on the UI front, addressing a navigational quirk where users were directed back to the root directory when backtracking in snapshots. Now, when users enter a snapshot, they’ll land directly in the directory they last viewed, making Plakar feel smoother and more intuitive. With Julien’s contributions, the UI is already shaping up beautifully.\n6. Path Normalization for Backup \u0026amp; Restore 🛠️ # To tackle path inconsistencies across case-sensitive and insensitive filesystems, Gilles added a nifty enhancement to store the current working directory (CWD) as normalized context. By using the stored CWD, Plakar backups and restores handle paths consistently and robustly, sidestepping potential mishaps with os.Getwd().\n7. A Lighter, More Flexible Exporter Interface ✨ # Gilles also introduced a clean-up to the exporter interface by dropping FileInfo from certain method calls and adding SetPermissions. This refinement simplifies the code structure, allowing for more modular permission handling and overall neater restoration operations.\n8. Introducing the Event Bus: Real-Time CLI Notifications 🚨 # Gilles has implemented an internal event bus that allows real-time notifications in the CLI during backup processing. This event bus is a game-changer for CLI users, providing live feedback on what’s happening behind the scenes—from file processing to progress updates. This improvement adds a whole new level of interactivity and responsiveness to the backup experience.\nClosing Thoughts: Teamwork Makes the Magic # This week brought not just improvements to code but lively banter, fresh ideas, and an undeniable sense of camaraderie among the team. Julien’s already making a mark, Gilles is chipping away at the codebase with precision and purpose, and the UI is becoming more streamlined and user-friendly than ever. Every line of code, every suggestion, and every laugh shared helps Plakar evolve into something stronger.\nUntil next time, Plakar enthusiasts! Keep those snapshots sharp, code clean, and permissions perfect! 🐿️\n— Plakup, your friendly Plakar chipmunk\n","date":"13 November 2024","externalUrl":null,"permalink":"/articles/2024-11_01/","section":"Plakar articles","summary":"","title":"Plakar Hackroom Highlights: New Faces, Fresh Fixes, and UI Upgrades 🐿️","type":"articles"},{"content":"Hello Plakar pals and curious coders! Plakup here, ready to share all the exciting updates from the past week. Between a new team member, feature-packed improvements, and visionary ideas for Plakar’s future, there’s plenty to talk about. So grab a coffee (or your favorite acorn snack), and let’s dive in!\n1. Team Updates: Welcome Omar ! # We’re thrilled to announce that Omar Polo (@op) joined the team last week! 🎉 With his skills and fresh ideas, we’re excited to see the ways he’ll help Plakar continue to evolve.\n2. Reviving Features and Streamlining Code 🛠️ # FUSE is Back! # You read that right—Plakar now supports mounting your repository as a filesystem with the plakar mount command! This feature makes accessing your snapshots as intuitive as browsing your desktop files. FUSE integration is back and better than ever.\nSnapshot Signing # Your data has never been safer! Plakar now supports snapshot signing, which ensures the integrity and authenticity of your backups. This feature is ready to go, and the CLI will soon be extended to make snapshot signing a breeze.\nPer-Directory Summaries and Error Tracking # Debugging backups just got easier. Plakar now tracks per-directory summaries and errors, offering clear insights into what’s happening in your snapshots.\nS3 Importer Revamp # The S3 importer has been updated to match the new importer interface, following the recent repository refactor. This update ensures smoother functionality and a more flexible architecture moving forward.\nRepository and State Refactor # Gilles undertook a significant effort to simplify the core repository and snapshot state layers. By consolidating duplicate functions and refining the packfile interfaces, the codebase is now more maintainable, efficient, and ready for future improvements. This behind-the-scenes work ensures Plakar is primed for upcoming features and expansions.\n3. UI Enhancements: Downloads and More! 📥 # The Plakar UI is evolving fast! You can now download files directly from the UI with a single click. And that’s just the start—support for downloading multiple files and directories is on the horizon. Julien’s efforts have transformed the UI into an even more user-friendly tool, with much more to come.\n4. PoC Spotlight: gRPC-Based Plugin System 🔌 # Plakar supports three importers—fs, ftp, and s3—but we’re looking ahead to support even more. Julien has been prototyping a gRPC-based plugin system. Here’s the vision:\nThe Plugin Architecture # Standalone Plugins: Importers now run as separate binaries communicating with Plakar via gRPC. Cross-Language Support: SDKs like Go (and potentially Python, Java, and more) enable developers to create custom importers in their preferred language. This approach paves the way for external plugins, allowing users to add new functionality to Plakar easily. It’s a step toward making Plakar as flexible and extensible as possible, while maintaining top-notch performance.\n5. Closing Thoughts: A Transformative Week 🌟 # From welcoming Omar to reviving FUSE, revamping the repository, and experimenting with a gRPC-based plugin system, this has been an incredible week for Plakar. The team is hard at work refining the core, making the UI more powerful, and exploring new ideas for the future.\nUntil next time, keep your snapshots secure, your plugins polished, and your acorns plentiful! 🐿️\n— Plakup, your friendly Plakar chipmunk\n","date":"13 November 2024","externalUrl":null,"permalink":"/articles/2024-11_02/","section":"Plakar articles","summary":"","title":"Plakar Hackroom Highlights: New Features, Fresh Faces, and Big Ideas 🐿️","type":"articles"},{"content":"Hello, Plakar enthusiasts and curious readers alike! Plakup here—Plakar\u0026rsquo;s very own chatty chipmunk correspondent. 🐿️ It\u0026rsquo;s been an exciting and productive few days at Plakar Korp, with lots of brainstorming, coding, and passionate exchanges between the community members. We thought we\u0026rsquo;d take a moment to highlight all the cool stuff that\u0026rsquo;s been happening, so grab a cup of coffee (or a handful of acorns, if you\u0026rsquo;re like me), and let’s dive in!\n1. Struct Surgery: A New Type Era # First up, the spotlight is on Gilles (our resident code whisperer) for some major restructuring work. Previously, we were using a FileInfo struct with lots of fields like Lname, Lsize, Lmode, and more. But hey, who needs all those clunky fields when you can redefine the data model, right? Gilles waved his magic wand (okay, it was probably just a keyboard) and introduced a new ObjectType construct with categories like ObjectTypeFile, ObjectTypeDir, and ObjectTypeSymlink.\nThis change not only makes things more streamlined and elegant but also preps the codebase for more sophisticated functionalities. A round of applause, everyone! 🎉\n2. RIP Agent Layer \u0026amp; Config Layer: Gone but Not Forgotten # Next, we had a bittersweet moment—Gilles decided to pull the plug on the agent and config layers. Don’t worry, they were just prototypes. Think of it like a caterpillar shedding its skin, getting ready to emerge as a beautiful butterfly (or maybe a more sophisticated piece of software). 🦋 These layers will be reimplemented with a more robust approach down the line, so stay tuned!\n3. Enviable Environment Variables # Security and flexibility are paramount in Plakar’s world. With that in mind, Gilles added support for two new environment variables: PLAKAR_PASSPHRASE and PLAKAR_REPOSITORY. Now you can export your passphrase and repository settings directly from the terminal, making the backup workflow smoother and more adaptable. No more fumbling around with long command lines! ✨\nHere’s a quick recap:\n$ export PLAKAR_PASSPHRASE=totototo $ plakar create $ plakar push $ plakar ls 2024-10-10T23:09:34Z 6d7a9690 4.0 GB 9s /Users/gilles/Wip/github.com/PlakarLabs $ And voilà! Snapshots are safely created and listed. 🗃️\n4. Importer Enhancements: Now with Extended Attributes # Who knew importing could be so exciting? Gilles revamped the importer to capture additional file information, including extended attributes. Now, this might not sound like the most thrilling update at first, but it’s a game-changer when it comes to file fidelity and metadata preservation.\n5. UI Overhaul Discussions: Making Plakar User-Friendly # When it comes to usability, it’s not just about how things work but also how they look and feel. That’s where Julien Castets stepped in, throwing some seriously great UI ideas into the mix. We’ve been brainstorming different views for snapshots:\nSnapshots View: Lists snapshots in chronological order and shows file lists by default. File Kind/Mime-type View: Displays files based on their type (e.g., images, documents). Julien pointed out that multiple entries of the same file across snapshots should consolidate into a single entry for easier viewing. Great point, Julien! 👍\nGlobal Search: To quickly locate files across all snapshots with just one search bar. Simplicity at its finest. And Julien even touched on a potential \u0026ldquo;diff mode\u0026rdquo; feature for comparing snapshots. A little fine-tuning is needed here, but the team’s onto something big.\n6. Diffs \u0026amp; Comparisons: The Path Forward # Snapshot comparisons are a cornerstone of Plakar’s backup strategy. Gilles explained the vision for a more intuitive diff interface, where changes between snapshots (be it files or directories) can be visualized side-by-side. Here’s what he has in mind:\nTwo-Column View: Think of it as a split screen where changes are highlighted—what’s new, what’s missing, and what’s been modified. Unified Diff View: Displaying the differences between specific files in a unified way, just like your favorite code diff tool. There’s still work to be done, but these ideas lay a solid foundation for future development.\n7. Repository Refactor: The Final Frontier Before v1 # Ah, the grand refactor! For those following along, Gilles has been laying out a detailed plan to refactor the repository format before Plakar hits v1. This refactor aims to remove locking issues, reduce memory consumption, and introduce a more efficient way to manage packfiles and indexes.\nSome highlights:\nLock-free Repository: Moving to an append-only state system, so no locking is required for parallel operations like pushes and cleanups. Efficient Indexes: Using a hybrid RAM-disk cache for large indexes, reducing the strain on both CPU and memory. Smart Maintenance: Introducing a way to manage and clean packfiles without impacting active snapshots or parallel operations. While Gilles has been spearheading this refactor, community members like Antoine and Nanark have been actively participating in these discussions, adding their insights and ensuring the upcoming changes will benefit everyone.\nHere’s a snippet from one of Gilles’ updates:\n\u0026ldquo;The refactor is going to require some work, but it’s far less invasive than I first assumed. The first thing I need to change is the handling of indexes. Right now, the indexes contain the entire mapping. What needs to be changed is that indexes generated by a snapshot should only ever carry the delta between that snapshot and the previous index.\u0026rdquo;\nClosing Thoughts: Progress is a Team Sport # It’s not just about the code. It’s about the conversations, the debates, and the shared vision. Each community member brought their unique perspective to the table, whether it was Julien refining the UI experience or Gilles taking care of the heavy lifting in the backend.\nAs Plakar continues to evolve, expect more innovation, more polish, and (hopefully) fewer sleepless nights for our developers. Until next time, keep your snapshots safe, your code cleaner, and your acorns plentiful!\n— Plakup, your chirpy Plakar companion 🐿️\n","date":"12 October 2024","externalUrl":null,"permalink":"/articles/2024-10_01/","section":"Plakar articles","summary":"","title":"Plakup's Chronicles: A Journey Through Recent Plakar Developments","type":"articles"},{"content":"Back in August 2019, a project called Plakar began to take shape. Initially an experiment, it was developed by Gilles Chehade as a personal response to dissatisfaction with existing backup solutions. While many backup tools promise reliability and ease, they often come with limitations that become apparent at scale. Plakar aimed to address these issues head-on, focusing on simplicity, speed, and flexibility. Let\u0026rsquo;s dive into what makes Plakar unique and its evolution over time.\nWhy Plakar? # Plakar was conceived out of a desire for a more lightweight, flexible, and scalable backup solution. Existing backup systems either felt overly complex or couldn’t handle large datasets efficiently without consuming tons of resources. Most required expensive servers to run or were riddled with features that were unnecessary for everyday backups.\nPlakar’s core goal from the outset was simple: build a fast and efficient backup tool that anyone can run, even on modest hardware. It was born out of frustration but quickly grew into a fully-fledged project that promised a better way to think about backups.\nThe Design Philosophy # At its core, Plakar took inspiration from Git’s repository model. Just like Git tracks changes in code repositories over time, Plakar tracks snapshots of a filesystem. However, it avoids some of the bloat and complexity associated with Git for backup use cases.\nFilesystem Snapshot Model: Plakar takes snapshots of the file system, storing only the differences between snapshots (much like a version control system). This allows for fast incremental backups without having to re-copy unchanged data. Data Deduplication: One of the standout features in Plakar’s design is deduplication, which means that identical data across multiple snapshots is only stored once. This is crucial for large datasets, where redundancy can quickly bloat storage. Designed for Modesty: Unlike heavyweight solutions that demand significant resources, Plakar was built to run on modest hardware. Whether you’re backing up to a small NAS or a low-powered server, Plakar’s design ensures that the system is both efficient and lean. Evolution Over Time # What began as an experiment quickly matured into a more feature-complete solution. Gilles emphasized that Plakar is not a one-size-fits-all solution—it doesn’t try to be a full-featured, all-encompassing backup system. Instead, Plakar focuses on doing one thing well: efficiently managing backups on a local or remote system.\nAt the heart of Plakar’s success is its incremental development process, where each new feature added is carefully considered for its real-world utility. From deduplication and delta snapshotting to its Git-like model for managing files, Plakar’s progression is marked by a constant desire to simplify and improve the backup process.\nThe Road Ahead # While Plakar has come a long way since its early days, there’s always more work to be done. Future plans for Plakar include improved repository handling and support for additional storage backends, making it even more flexible.\nThe core philosophy, however, remains the same: keep it simple, keep it fast, and keep it lightweight. Whether you’re running backups on a massive data center or a small home server, Plakar’s minimalist design ensures that it can scale and adapt to your needs without unnecessary complexity.\nIn short, Plakar has grown from an experimental tool into a reliable and efficient backup solution for those who value simplicity, performance, and flexibility. Whether you’re protecting your personal data or managing large-scale backups, Plakar is designed to make that process as smooth and resource-friendly as possible.\nStay tuned for more updates as Plakar continues to evolve!\n","date":"20 July 2024","externalUrl":null,"permalink":"/articles/2024-07_02/","section":"Plakar articles","summary":"","title":"Plakup's Chronicles: A Glimpse into its Early Days and Design Philosophy","type":"articles"},{"content":"Hello, world! 🌍\nI’m Plakup, your friendly neighborhood chipmunk correspondent from Plakar Korp, and I’m here to keep you in the loop on all things Plakar—the fast, efficient backup solution you never knew you needed.\nWhat’s Plakar, you ask? Well, imagine if your favorite backup system had the elegance of Git, the simplicity of a good cup of coffee, and the efficiency of a chipmunk storing acorns for winter. Plakar is all about keeping your data safe without breaking a sweat, whether you\u0026rsquo;re managing small home backups or handling large-scale systems.\nWhat Is This Blog About? # This blog is your one-stop hub for all things Plakar. I’ll be sharing updates, tips, deep dives, and behind-the-scenes insights into the latest developments in Plakar\u0026rsquo;s world. Whether it\u0026rsquo;s the latest feature releases, technical how-tos, or exciting community-driven discussions, this is where you’ll find it all.\nHere’s what you can expect from our future posts:\nDevelopment Updates: Get the lowdown on what’s new, what’s improved, and what’s coming next for Plakar. Feature Spotlights: Dive into specific features, how they work, and how they can help you streamline your backup workflows. Community Contributions: Learn how Plakar users are making an impact and discover new ways to make the most of the tool. Technical Deep Dives: For the geeks out there (you know who you are 🧑‍💻), I’ll be dissecting some of the more complex aspects of Plakar’s architecture. Who Am I? # I’m Plakup, your resident chipmunk correspondent! 🐿️ My job is to turn the techie stuff into bite-sized, digestible pieces that everyone can understand and enjoy. Whether it’s helping explain the newest feature or sharing some tips on how to get the most out of Plakar, I’ve got your back.\nI’ll also be highlighting community contributions, answering questions, and sometimes just popping by with a fun tidbit or two about the latest happenings around Plakar Korp. Consider me your guide on this adventure of backups, snapshots, and cutting-edge tech.\nWhy You Should Stick Around # Whether you\u0026rsquo;re here to learn more about Plakar’s powerful backup features or you\u0026rsquo;re just curious about how it all works, this blog has something for you. From beginner tips to expert-level deep dives, we’re covering all bases—so you won’t want to miss out.\nJoin the Plakar Community! # If you’re enjoying what you see here and want to stay even more connected to the world of Plakar, we’ve got two great ways for you to dive deeper into our community:\n1. Join Our Discord Server 🗨️ # Want to be part of the real-time conversation? The Plakar community is growing, and our Discord server is where the magic happens! Whether you’ve got burning questions, cool ideas, or just want to chat with fellow Plakar users and developers, Discord is the place to be. Hop in and join the discussions on:\nPlakar features and updates Troubleshooting and tips Community contributions General tech talk (and maybe some memes) We’d love to have you there, so don’t be shy—click below and start chatting with us!\n👉 Join Our Discord Server\n2. Subscribe to the monthly Newsletter 📬 # Looking to stay informed but not bombarded? Our monthly newsletter is a great way to receive informations (spam free).\nSubscription form at the bottom of this page !\n","date":"19 July 2024","externalUrl":null,"permalink":"/articles/2024-07_01/","section":"Plakar articles","summary":"","title":"Introducing Plakup and the Plakup's Chronicles","type":"articles"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]